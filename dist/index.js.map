{"version":3,"file":"index.js","sources":["../src/gridsterConfig.interface.ts","../src/gridsterRenderer.ts","../src/utils/event-manager.ts","../src/utils/renderer.ts","../src/gridsterConfig.constant.ts","../src/gridsterUtils.service.ts","../src/gridsterItem.interface.ts","../src/gridsterEmptyCell.ts","../src/gridsterCompact.ts","../src/Gridster.tsx"],"sourcesContent":["import {GridsterItemInterface} from './gridsterItem.interface';\r\nimport {GridsterItemComponentInterface} from './gridsterItemComponent.interface';\r\nimport {GridsterComponentInterface} from './gridster.interface';\r\n\r\nexport type gridTypes = 'fit' | 'scrollVertical' | 'scrollHorizontal' | 'fixed' | 'verticalFixed' | 'horizontalFixed';\r\nexport type displayGrids = 'always' | 'onDrag&Resize' | 'none';\r\nexport type compactTypes =\r\n  'none'\r\n  | 'compactUp'\r\n  | 'compactLeft'\r\n  | 'compactUp&Left'\r\n  | 'compactLeft&Up'\r\n  | 'compactRight'\r\n  | 'compactUp&Right'\r\n  | 'compactRight&Up';\r\n\r\nexport enum GridType {\r\n  Fit = 'fit',\r\n  ScrollVertical = 'scrollVertical',\r\n  ScrollHorizontal = 'scrollHorizontal',\r\n  Fixed = 'fixed',\r\n  VerticalFixed = 'verticalFixed',\r\n  HorizontalFixed = 'horizontalFixed'\r\n}\r\n\r\nexport enum DisplayGrid {\r\n  Always = 'always',\r\n  OnDragAndResize = 'onDrag&Resize',\r\n  None = 'none'\r\n}\r\n\r\nexport enum CompactType {\r\n  None = 'none',\r\n  CompactUp = 'compactUp',\r\n  CompactLeft = 'compactLeft',\r\n  CompactUpAndLeft = 'compactUp&Left',\r\n  CompactLeftAndUp = 'compactLeft&Up',\r\n  CompactRight = 'compactRight',\r\n  CompactUpAndRight = 'compactUp&Right',\r\n  CompactRightAndUp = 'compactRight&Up',\r\n}\r\n\r\nexport interface GridsterConfig {\r\n  gridType?: gridTypes;\r\n  fixedColWidth?: number;\r\n  fixedRowHeight?: number;\r\n  keepFixedHeightInMobile?: boolean;\r\n  keepFixedWidthInMobile?: boolean;\r\n  setGridSize?: boolean;\r\n  compactType?: compactTypes;\r\n  mobileBreakpoint?: number;\r\n  minCols?: number;\r\n  maxCols?: number;\r\n  minRows?: number;\r\n  maxRows?: number;\r\n  defaultItemCols?: number;\r\n  defaultItemRows?: number;\r\n  maxItemCols?: number;\r\n  maxItemRows?: number;\r\n  minItemCols?: number;\r\n  minItemRows?: number;\r\n  minItemArea?: number;\r\n  maxItemArea?: number;\r\n  margin?: number;\r\n  outerMargin?: boolean;\r\n  outerMarginTop?: number | null;\r\n  outerMarginRight?: number | null;\r\n  outerMarginBottom?: number | null;\r\n  outerMarginLeft?: number | null;\r\n  useTransformPositioning?: boolean;\r\n  scrollSensitivity?: number | null;\r\n  scrollSpeed?: number;\r\n  initCallback?: (gridster: GridsterComponentInterface) => void;\r\n  destroyCallback?: (gridster: GridsterComponentInterface) => void;\r\n  gridSizeChangedCallback?: (gridster: GridsterComponentInterface) => void;\r\n  itemChangeCallback?: (item: GridsterItemInterface, itemComponent: GridsterItemComponentInterface) => void;\r\n  itemResizeCallback?: (item: GridsterItemInterface, itemComponent: GridsterItemComponentInterface) => void;\r\n  itemInitCallback?: (item: GridsterItemInterface, itemComponent: GridsterItemComponentInterface) => void;\r\n  itemRemovedCallback?: (item: GridsterItemInterface, itemComponent: GridsterItemComponentInterface) => void;\r\n  itemValidateCallback?: (item: GridsterItemInterface) => boolean;\r\n  draggable?: Draggable;\r\n  resizable?: Resizable;\r\n  swap?: boolean;\r\n  swapWhileDragging?: boolean;\r\n  pushItems?: boolean;\r\n  disablePushOnDrag?: boolean;\r\n  disablePushOnResize?: boolean;\r\n  disableAutoPositionOnConflict?: boolean;\r\n  pushDirections?: PushDirections;\r\n  pushResizeItems?: boolean;\r\n  displayGrid?: displayGrids;\r\n  disableWindowResize?: boolean;\r\n  disableWarnings?: boolean;\r\n  scrollToNewItems?: boolean;\r\n  disableScrollHorizontal?: boolean;\r\n  disableScrollVertical?: boolean;\r\n  enableEmptyCellClick?: boolean;\r\n  enableEmptyCellContextMenu?: boolean;\r\n  enableEmptyCellDrop?: boolean;\r\n  enableEmptyCellDrag?: boolean;\r\n  enableOccupiedCellDrop?: boolean;\r\n  emptyCellClickCallback?: (event: MouseEvent, item: GridsterItemInterface) => void;\r\n  emptyCellContextMenuCallback?: (event: MouseEvent, item: GridsterItemInterface) => void;\r\n  emptyCellDropCallback?: (event: MouseEvent, item: GridsterItemInterface) => void;\r\n  emptyCellDragCallback?: (event: MouseEvent, item: GridsterItemInterface) => void;\r\n  emptyCellDragMaxCols?: number;\r\n  emptyCellDragMaxRows?: number;\r\n  ignoreMarginInRow?: boolean;\r\n  api?: {\r\n    resize?: () => void,\r\n    optionsChanged?: () => void,\r\n    getNextPossiblePosition?: (newItem: GridsterItemInterface) => boolean,\r\n    getFirstPossiblePosition?: (item: GridsterItemInterface) => GridsterItemInterface,\r\n    getLastPossiblePosition?: (item: GridsterItemInterface) => GridsterItemInterface,\r\n  };\r\n\r\n  [propName: string]: any;\r\n}\r\n\r\nexport interface DragBase {\r\n  enabled?: boolean;\r\n  stop?: (item: GridsterItemInterface, itemComponent: GridsterItemComponentInterface, event: MouseEvent) => Promise<any> | void;\r\n  start?: (item: GridsterItemInterface, itemComponent: GridsterItemComponentInterface, event: MouseEvent) => void;\r\n  delayStart?: number;\r\n}\r\n\r\nexport interface Draggable extends DragBase {\r\n  ignoreContentClass?: string;\r\n  ignoreContent?: boolean;\r\n  dragHandleClass?: string;\r\n  dropOverItems?: boolean;\r\n  dropOverItemsCallback?: (source: GridsterItemInterface, target: GridsterItemInterface, grid?: GridsterComponentInterface) => void;\r\n  dropOverItemStack?: boolean, \t// ����Item������һ��Item���з�Ŀ��Item�Ĵ�С������ʱҪ��֤dropOverItemStackΪfalse\r\n  dropOverItemSplit?: boolean\t// ����Item�ѵ����������ɲ��֣�����ʱҪ��֤dropOverItemSplitΪfalse\r\n}\r\n\r\nexport interface Resizable extends DragBase {\r\n  handles?: {\r\n    s: boolean,\r\n    e: boolean,\r\n    n: boolean,\r\n    w: boolean,\r\n    se: boolean,\r\n    ne: boolean,\r\n    sw: boolean,\r\n    nw: boolean\r\n  };\r\n}\r\n\r\nexport interface PushDirections {\r\n  north: boolean;\r\n  east: boolean;\r\n  south: boolean;\r\n  west: boolean;\r\n}\r\n","import {GridsterComponentInterface} from './gridster.interface';\r\nimport {GridType} from './gridsterConfig.interface';\r\nimport {GridsterItemInterface} from './gridsterItem.interface';\r\nimport { Renderer } from './utils/renderer';\r\n\r\nexport class GridsterRenderer {\r\n\r\n  constructor(private gridster: GridsterComponentInterface) {\r\n  }\r\n\r\n  destroy(): void {\r\n    delete this.gridster;\r\n  }\r\n\r\n  updateItem(el: any, item: GridsterItemInterface, renderer: Renderer) {\r\n    if (this.gridster.mobile) {\r\n      this.clearCellPosition(renderer, el);\r\n      if (this.gridster.$options.keepFixedHeightInMobile) {\r\n        renderer.setStyle(el, 'height', (item.rows * this.gridster.$options.fixedRowHeight) + 'px');\r\n      } else {\r\n        renderer.setStyle(el, 'height',  (item.rows * this.gridster.curWidth / item.cols ) + 'px');\r\n      }\r\n      if (this.gridster.$options.keepFixedWidthInMobile) {\r\n        renderer.setStyle(el, 'width', this.gridster.$options.fixedColWidth + 'px');\r\n      } else {\r\n        renderer.setStyle(el, 'width', '');\r\n      }\r\n\r\n      renderer.setStyle(el, 'margin-bottom', this.gridster.$options.margin + 'px');\r\n      renderer.setStyle(el, 'margin-right', '');\r\n    } else {\r\n      // 这里的x,y 其实是left 和 top\r\n      let x = 0;\r\n      let y = 0;\r\n      if (this.gridster.$options.draggable.dropOverItemStack) {\r\n        // 堆叠模式下，位置的不能直接通过计算过去，应该优先应用具体的位置信息\r\n        x = item.left !== undefined ? item.left - this.gridster.$options.margin : Math.round(this.gridster.curColWidth * item.x);\r\n        y = item.top !== undefined ? item.top - this.gridster.$options.margin : Math.round(this.gridster.curRowHeight * item.y);\r\n        if (item.zIndex) {\r\n          renderer.setStyle(el, 'z-index', item.zIndex);\r\n        }\r\n      } else {\r\n        x = Math.round(this.gridster.curColWidth * item.x);\r\n        y = Math.round(this.gridster.curRowHeight * item.y);\r\n      }\r\n      const width = this.gridster.curColWidth * item.cols - this.gridster.$options.margin;\r\n      const height = (this.gridster.curRowHeight * item.rows - this.gridster.$options.margin);\r\n      // set the cell style\r\n      this.setCellPosition(renderer, el, x, y);\r\n      if (!this.gridster.$options.draggable.dropOverItemStack) {\r\n        renderer.setStyle(el, 'width', width + 'px');\r\n        renderer.setStyle(el, 'height', height + 'px');\r\n      } else {\r\n        // 如果item设置了宽、高，应该优先应用\r\n        renderer.setStyle(el, 'width', (item.width ? item.width : width) + 'px');\r\n        renderer.setStyle(el, 'height', (item.height ? item.height : height) + 'px');\r\n      }\r\n      let marginBottom: string | null = null;\r\n      let marginRight: string | null = null;\r\n      if (this.gridster.$options.outerMargin) {\r\n        if (this.gridster.rows === item.rows + item.y) {\r\n          if (this.gridster.$options.outerMarginBottom !== null) {\r\n            marginBottom = this.gridster.$options.outerMarginBottom + 'px';\r\n          } else {\r\n            marginBottom = this.gridster.$options.margin + 'px';\r\n          }\r\n        }\r\n        if (this.gridster.columns === item.cols + item.x) {\r\n          if (this.gridster.$options.outerMarginBottom !== null) {\r\n            marginRight = this.gridster.$options.outerMarginRight + 'px';\r\n          } else {\r\n            marginRight = this.gridster.$options.margin + 'px';\r\n          }\r\n        }\r\n      }\r\n\r\n      renderer.setStyle(el, 'margin-bottom', marginBottom);\r\n      renderer.setStyle(el, 'margin-right', marginRight);\r\n    }\r\n  }\r\n\r\n  updateGridster() {\r\n    let addClass = '';\r\n    let removeClass1 = '';\r\n    let removeClass2 = '';\r\n    let removeClass3 = '';\r\n    if (this.gridster.$options.gridType === GridType.Fit) {\r\n      addClass = GridType.Fit;\r\n      removeClass1 = GridType.ScrollVertical;\r\n      removeClass2 = GridType.ScrollHorizontal;\r\n      removeClass3 = GridType.Fixed;\r\n    } else if (this.gridster.$options.gridType === GridType.ScrollVertical) {\r\n      this.gridster.curRowHeight = this.gridster.curColWidth;\r\n      addClass = GridType.ScrollVertical;\r\n      removeClass1 = GridType.Fit;\r\n      removeClass2 = GridType.ScrollHorizontal;\r\n      removeClass3 = GridType.Fixed;\r\n    } else if (this.gridster.$options.gridType === GridType.ScrollHorizontal) {\r\n      this.gridster.curColWidth = this.gridster.curRowHeight;\r\n      addClass = GridType.ScrollHorizontal;\r\n      removeClass1 = GridType.Fit;\r\n      removeClass2 = GridType.ScrollVertical;\r\n      removeClass3 = GridType.Fixed;\r\n    } else if (this.gridster.$options.gridType === GridType.Fixed) {\r\n      this.gridster.curColWidth = this.gridster.$options.fixedColWidth +\r\n        (this.gridster.$options.ignoreMarginInRow ? 0 : this.gridster.$options.margin);\r\n      this.gridster.curRowHeight = this.gridster.$options.fixedRowHeight +\r\n        (this.gridster.$options.ignoreMarginInRow ? 0 : this.gridster.$options.margin);\r\n      addClass = GridType.Fixed;\r\n      removeClass1 = GridType.Fit;\r\n      removeClass2 = GridType.ScrollVertical;\r\n      removeClass3 = GridType.ScrollHorizontal;\r\n    } else if (this.gridster.$options.gridType === GridType.VerticalFixed) {\r\n      this.gridster.curRowHeight = this.gridster.$options.fixedRowHeight +\r\n        (this.gridster.$options.ignoreMarginInRow ? 0 : this.gridster.$options.margin);\r\n      addClass = GridType.ScrollVertical;\r\n      removeClass1 = GridType.Fit;\r\n      removeClass2 = GridType.ScrollHorizontal;\r\n      removeClass3 = GridType.Fixed;\r\n    } else if (this.gridster.$options.gridType === GridType.HorizontalFixed) {\r\n      this.gridster.curColWidth = this.gridster.$options.fixedColWidth +\r\n        (this.gridster.$options.ignoreMarginInRow ? 0 : this.gridster.$options.margin);\r\n      addClass = GridType.ScrollHorizontal;\r\n      removeClass1 = GridType.Fit;\r\n      removeClass2 = GridType.ScrollVertical;\r\n      removeClass3 = GridType.Fixed;\r\n    }\r\n\r\n    if (this.gridster.mobile) {\r\n      this.gridster.renderer.removeClass(this.gridster.el, addClass);\r\n    } else {\r\n      this.gridster.renderer.addClass(this.gridster.el, addClass);\r\n    }\r\n    this.gridster.renderer.removeClass(this.gridster.el, removeClass1);\r\n    this.gridster.renderer.removeClass(this.gridster.el, removeClass2);\r\n    this.gridster.renderer.removeClass(this.gridster.el, removeClass3);\r\n  }\r\n\r\n  getGridColumnStyle(i: number) {\r\n    return {\r\n      ...this.getLeftPosition(this.gridster.curColWidth * i),\r\n      width: this.gridster.curColWidth - this.gridster.$options.margin + 'px',\r\n      height: this.gridster.gridRows.length * this.gridster.curRowHeight - this.gridster.$options.margin + 'px'\r\n    };\r\n  }\r\n\r\n  getGridRowStyle(i: number) {\r\n    return {\r\n      ...this.getTopPosition(this.gridster.curRowHeight * i),\r\n      width: this.gridster.gridColumns.length * this.gridster.curColWidth - this.gridster.$options.margin + 'px',\r\n      height: this.gridster.curRowHeight - this.gridster.$options.margin + 'px'\r\n    };\r\n  }\r\n\r\n  getLeftPosition(d: number): Object {\r\n    if (this.gridster.$options.useTransformPositioning) {\r\n      return {\r\n        transform: 'translateX(' + d + 'px)',\r\n      };\r\n    } else {\r\n      return {\r\n        left: (this.getLeftMargin() + d) + 'px'\r\n      };\r\n    }\r\n  }\r\n\r\n  getTopPosition(d: number): Object {\r\n    if (this.gridster.$options.useTransformPositioning) {\r\n      return {\r\n        transform: 'translateY(' + d + 'px)',\r\n      };\r\n    } else {\r\n      return {\r\n        top: this.getTopMargin() + d + 'px'\r\n      };\r\n    }\r\n  }\r\n\r\n  clearCellPosition(renderer: Renderer, el: any): void {\r\n    if (this.gridster.$options.useTransformPositioning) {\r\n      renderer.setStyle(el, 'transform', '');\r\n    } else {\r\n      renderer.setStyle(el, 'top', '');\r\n      renderer.setStyle(el, 'left', '');\r\n    }\r\n  }\r\n\r\n  setCellPosition(renderer: Renderer, el: any, x: number, y: number): void {\r\n    if (this.gridster.$options.useTransformPositioning) {\r\n      const transform = 'translate3d(' + x + 'px, ' + y + 'px, 0)';\r\n      renderer.setStyle(el, 'transform', transform);\r\n    } else {\r\n      if (!this.gridster.$options.draggable.dropOverItemStack) {\r\n        renderer.setStyle(el, 'left', this.getLeftMargin() + x + 'px');\r\n        renderer.setStyle(el, 'top', this.getTopMargin() + y + 'px');\r\n      } else {\r\n        let left = 0;\r\n        let top = 0;\r\n        // 这里对左、上边缘位置限制处理，避免元素渲染到边缘以外去\r\n        if (x < 0 || y < 0) {\r\n          if (x < 0 && y >= 0) {\r\n            left = this.getLeftMargin();\r\n            top = this.getTopMargin() + y;\r\n          }\r\n          if (x >= 0 && y < 0) {\r\n            left = this.getLeftMargin() + x;\r\n            top = this.getTopMargin();\r\n          }\r\n          if (x < 0 && y < 0) {\r\n            left = this.getLeftMargin();\r\n            top = this.getTopMargin();\r\n          }\r\n        } else {\r\n          left = this.getLeftMargin() + x;\r\n          top = this.getTopMargin() + y;\r\n        }\r\n        renderer.setStyle(el, 'left', left + 'px');\r\n        renderer.setStyle(el, 'top', top + 'px');\r\n        if (this.gridster.movingItem) {\r\n          Object.assign(this.gridster.movingItem, { left, top });\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  getLeftMargin(): number {\r\n    if (this.gridster.$options.outerMargin) {\r\n      if (this.gridster.$options.outerMarginLeft !== null) {\r\n        return this.gridster.$options.outerMarginLeft;\r\n      } else {\r\n        return this.gridster.$options.margin;\r\n      }\r\n    } else {\r\n      return 0;\r\n    }\r\n  }\r\n\r\n  getTopMargin(): number {\r\n    if (this.gridster.$options.outerMargin) {\r\n      if (this.gridster.$options.outerMarginTop !== null) {\r\n        return this.gridster.$options.outerMarginTop;\r\n      } else {\r\n        return this.gridster.$options.margin;\r\n      }\r\n    } else {\r\n      return 0;\r\n    }\r\n  }\r\n}\r\n","export class EventManager {\r\n\r\n  \r\n    /**\r\n     * Initializes an instance of the event-manager service.\r\n     */\r\n    constructor() {\r\n    }\r\n  \r\n    /**\r\n     * Registers a handler for a specific element and event.\r\n     *\r\n     * @param element The HTML element to receive event notifications.\r\n     * @param eventName The name of the event to listen for.\r\n     * @param handler A function to call when the notification occurs. Receives the\r\n     * event object as an argument.\r\n     */\r\n    addEventListener<K extends keyof HTMLElementEventMap>(element: HTMLElement, eventName: K, handler: (this: HTMLElement, ev: HTMLElementEventMap[K]) => any): Function {\r\n      element.addEventListener(eventName, handler);\r\n      return function () {\r\n        element.removeEventListener(eventName, handler);\r\n      };\r\n    }\r\n  \r\n    /**\r\n     * Registers a global handler for an event in a target view.\r\n     *\r\n     * @param target A target for global event notifications. One of \"window\", \"document\", or \"body\".\r\n     * @param eventName The name of the event to listen for.\r\n     * @param handler A function to call when the notification occurs. Receives the\r\n     * event object as an argument.\r\n     */\r\n    addGlobalEventListener<K extends keyof HTMLElementEventMap>(target: 'window'|'document'|'body' | any, eventName: K, handler: Function): Function {\r\n      const t = getGlobalEventTarget(document, target);\r\n      t.addEventListener(eventName, handler);\r\n      return () => {\r\n        t.removeEventListener(eventName, handler);\r\n      }\r\n    }\r\n  }\r\n\r\n  function getGlobalEventTarget(doc: Document, target: string): any {\r\n    if (target === 'window') {\r\n      return window;\r\n    }\r\n    if (target === 'document') {\r\n      return doc;\r\n    }\r\n    if (target === 'body') {\r\n      return doc.body;\r\n    }\r\n    return null;\r\n  }\r\n  \r\n//   /**\r\n//  * Get event object of event string, the first `.` is used to split event and namespace\r\n//  *\r\n//  * @param  {String} event Event type string with namespace or not\r\n//  * @return {Object} An Object with `e` and `ns` key\r\n//  */\r\n// function parse<K extends keyof ElementEventMap>(event: HTMLElementEventMap[K]) {\r\n//   const dotIndex = event.indexOf('.');\r\n//   if (dotIndex > 0) {\r\n//     return {\r\n//       e: event.substring(0, event.indexOf('.')),\r\n//       ns: event.substring(dotIndex + 1, event.length)\r\n//     };\r\n//   }\r\n\r\n//   return { e: event };\r\n// }\r\n\r\n","import { EventManager } from \"./event-manager\";\r\n\r\n/**\r\n * Flags for renderer-specific style modifiers.\r\n * @publicApi\r\n */\r\nexport enum RendererStyleFlags2 {\r\n  // TODO(misko): This needs to be refactored into a separate file so that it can be imported from\r\n  // `node_manipulation.ts` Currently doing the import cause resolution order to change and fails\r\n  // the tests. The work around is to have hard coded value in `node_manipulation.ts` for now.\r\n  /**\r\n   * Marks a style as important.\r\n   */\r\n  Important = 1 << 0,\r\n  /**\r\n   * Marks a style as using dash case naming (this-is-dash-case).\r\n   */\r\n  DashCase = 1 << 1\r\n}\r\n\r\nexport const NAMESPACE_URIS: { [ns: string]: string } = {\r\n  svg: 'http://www.w3.org/2000/svg',\r\n  xhtml: 'http://www.w3.org/1999/xhtml',\r\n  xlink: 'http://www.w3.org/1999/xlink',\r\n  xml: 'http://www.w3.org/XML/1998/namespace',\r\n  xmlns: 'http://www.w3.org/2000/xmlns/'\r\n}\r\n\r\nexport class Renderer {\r\n\r\n  eventManager: EventManager = new EventManager();\r\n\r\n  setAttribute(el: any, name: string, value: string, namespace?: string): void {\r\n    if (namespace) {\r\n      // TODO(FW-811): Ivy may cause issues here because it's passing around\r\n      // full URIs for namespaces, therefore this lookup will fail.\r\n      el.setAttributeNS(\r\n        NAMESPACE_URIS[namespace],\r\n        namespace + ':' + name,\r\n        value\r\n      )\r\n    } else {\r\n      el.setAttribute(name, value)\r\n    }\r\n  }\r\n\r\n  removeAttribute(el: any, name: string, namespace?: string): void {\r\n    if (namespace) {\r\n      // TODO(FW-811): Ivy may cause issues here because it's passing around\r\n      // full URIs for namespaces, therefore this lookup will fail.\r\n      el.removeAttributeNS(NAMESPACE_URIS[namespace], name)\r\n    } else {\r\n      el.removeAttribute(name)\r\n    }\r\n  }\r\n\r\n  addClass(el: any, name: string): void {\r\n    el.classList.add(name)\r\n  }\r\n\r\n  removeClass(el: any, name: string): void {\r\n    el.classList.remove(name)\r\n  }\r\n\r\n  setStyle(\r\n    el: any,\r\n    style: string,\r\n    value: any,\r\n    flags?: RendererStyleFlags2\r\n  ): void {\r\n    style = style.replace(/([a-z])([A-Z])/g, '$1-$2').toLowerCase()\r\n    const styleMap = _readStyleAttribute(el)\r\n    if (flags && RendererStyleFlags2.Important) {\r\n      value += ' !important'\r\n    }\r\n    styleMap[style] = value == null ? '' : value\r\n    _writeStyleAttribute(el, styleMap)\r\n  }\r\n\r\n  \r\n  listen<K extends keyof HTMLElementEventMap>(target: 'window'|'document'|'body'| any, event: K, callback: (event: any) => boolean):\r\n  () => void {\r\n    if (typeof target === 'string') { \r\n      return <() => void>this.addGlobalEventListener(\r\n        target, event, callback);\r\n    } else {\r\n      return <() => void>this.addEventListener(\r\n        target, event, callback);\r\n    }\r\n  }\r\n\r\n      /**\r\n     * Registers a handler for a specific element and event.\r\n     *\r\n     * @param element The HTML element to receive event notifications.\r\n     * @param eventName The name of the event to listen for.\r\n     * @param handler A function to call when the notification occurs. Receives the\r\n     * event object as an argument.\r\n     */\r\n    addEventListener<K extends keyof HTMLElementEventMap>(element: HTMLElement, eventName: K, handler: (this: HTMLElement, ev: HTMLElementEventMap[K]) => any): Function {\r\n      element.addEventListener(eventName, handler);\r\n      return function () {\r\n        element.removeEventListener(eventName, handler);\r\n      };\r\n    }\r\n  \r\n    /**\r\n     * Registers a global handler for an event in a target view.\r\n     *\r\n     * @param target A target for global event notifications. One of \"window\", \"document\", or \"body\".\r\n     * @param eventName The name of the event to listen for.\r\n     * @param handler A function to call when the notification occurs. Receives the\r\n     * event object as an argument.\r\n     */\r\n    addGlobalEventListener<K extends keyof HTMLElementEventMap>(target: 'window'|'document'|'body' | any, eventName: K, handler: Function): Function {\r\n      const t = getGlobalEventTarget(document, target);\r\n      t.addEventListener(eventName, handler);\r\n      return () => {\r\n        t.removeEventListener(eventName, handler);\r\n      }\r\n    }\r\n  }\r\n  \r\n\r\nfunction getGlobalEventTarget(doc: Document, target: string): any {\r\n  if (target === 'window') {\r\n    return window;\r\n  }\r\n  if (target === 'document') {\r\n    return doc;\r\n  }\r\n  if (target === 'body') {\r\n    return doc.body;\r\n  }\r\n  return null;\r\n}\r\n\r\n\r\nfunction _readStyleAttribute(element: any): { [name: string]: string } {\r\n  const styleMap: { [name: string]: string } = {}\r\n  const styleAttribute = element.getAttribute('style')\r\n  if (styleAttribute) {\r\n    const styleList = styleAttribute.split(/;+/g)\r\n    for (let i = 0; i < styleList.length; i++) {\r\n      const style = styleList[i].trim()\r\n      if (style.length > 0) {\r\n        const colonIndex = style.indexOf(':')\r\n        if (colonIndex === -1) {\r\n          throw new Error(`Invalid CSS style: ${style}`)\r\n        }\r\n        const name = style.substr(0, colonIndex).trim()\r\n        styleMap[name] = style.substr(colonIndex + 1).trim()\r\n      }\r\n    }\r\n  }\r\n  return styleMap\r\n}\r\n\r\nfunction _writeStyleAttribute(\r\n  element: any,\r\n  styleMap: { [name: string]: string }\r\n) {\r\n  let styleAttrValue = ''\r\n  for (const key in styleMap) {\r\n    const newValue = styleMap[key]\r\n    if (newValue != null) {\r\n      styleAttrValue += key + ':' + styleMap[key] + ';'\r\n    }\r\n  }\r\n  element.setAttribute('style', styleAttrValue)\r\n}\r\n","import {CompactType, DisplayGrid, GridsterConfig, GridType} from './gridsterConfig.interface';\r\n\r\nexport const GridsterConfigService: GridsterConfig = {\r\n  gridType: GridType.Fit, // 'fit' will fit the items in the container without scroll;\r\n  // 'scrollVertical' will fit on width and height of the items will be the same as the width\r\n  // 'scrollHorizontal' will fit on height and width of the items will be the same as the height\r\n  // 'fixed' will set the rows and columns dimensions based on fixedColWidth and fixedRowHeight options\r\n  // 'verticalFixed' will set the rows to fixedRowHeight and columns width will fit the space available\r\n  // 'horizontalFixed' will set the columns to fixedColWidth and rows height will fit the space available\r\n  fixedColWidth: 250, // fixed col width for gridType: 'fixed'\r\n  fixedRowHeight: 250, // fixed row height for gridType: 'fixed'\r\n  keepFixedHeightInMobile: false, // keep the height from fixed gridType in mobile layout\r\n  keepFixedWidthInMobile: false, // keep the width from fixed gridType in mobile layout\r\n  setGridSize: false, // sets grid size depending on content\r\n  compactType: CompactType.None, // compact items: 'none' | 'compactUp' | 'compactLeft' | 'compactUp&Left' | 'compactLeft&Up'\r\n  mobileBreakpoint: 640, // if the screen is not wider that this, remove the grid layout and stack the items\r\n  minCols: 1, // minimum amount of columns in the grid\r\n  maxCols: 100, // maximum amount of columns in the grid\r\n  minRows: 1, // minimum amount of rows in the grid\r\n  maxRows: 100, // maximum amount of rows in the grid\r\n  defaultItemCols: 1, // default width of an item in columns\r\n  defaultItemRows: 1, // default height of an item in rows\r\n  maxItemCols: 50, // max item number of cols\r\n  maxItemRows: 50, // max item number of rows\r\n  minItemCols: 1, // min item number of columns\r\n  minItemRows: 1, // min item number of rows\r\n  minItemArea: 1, // min item area: cols * rows\r\n  maxItemArea: 2500, // max item area: cols * rows\r\n  margin: 10,  // margin between grid items\r\n  outerMargin: true,  // if margins will apply to the sides of the container\r\n  outerMarginTop: null, // override outer margin for grid\r\n  outerMarginRight: null, // override outer margin for grid\r\n  outerMarginBottom: null, // override outer margin for grid\r\n  outerMarginLeft: null, // override outer margin for grid\r\n  useTransformPositioning: true, // toggle between transform or top/left positioning of items\r\n  scrollSensitivity: 10,  // margin of the dashboard where to start scrolling\r\n  scrollSpeed: 20,  // how much to scroll each mouse move when in the scrollSensitivity zone\r\n  initCallback: undefined, // callback to call after grid has initialized. Arguments: gridsterComponent\r\n  destroyCallback: undefined, // callback to call after grid has destroyed. Arguments: gridsterComponent\r\n  gridSizeChangedCallback: undefined, // callback to call after grid has changed size. Arguments: gridsterComponent\r\n  itemChangeCallback: undefined,  // callback to call for each item when is changes x, y, rows, cols.\r\n  // Arguments: gridsterItem, gridsterItemComponent\r\n  itemResizeCallback: undefined,  // callback to call for each item when width/height changes.\r\n  // Arguments: gridsterItem, gridsterItemComponent\r\n  itemInitCallback: undefined,  // callback to call for each item when is initialized.\r\n  // Arguments: gridsterItem, gridsterItemComponent\r\n  itemRemovedCallback: undefined,  // callback to call for each item when is initialized.\r\n  // Arguments: gridsterItem, gridsterItemComponent\r\n  itemValidateCallback: undefined,  // callback to call to validate item position/size. Return true if valid.\r\n  // Arguments: gridsterItem\r\n  enableEmptyCellClick: false, // enable empty cell click events\r\n  enableEmptyCellContextMenu: false, // enable empty cell context menu (right click) events\r\n  enableEmptyCellDrop: false, // enable empty cell drop events\r\n  enableEmptyCellDrag: false, // enable empty cell drag events\r\n  enableOccupiedCellDrop: false, // enable occupied cell drop events\r\n  emptyCellClickCallback: undefined, // empty cell click callback\r\n  emptyCellContextMenuCallback: undefined, // empty cell context menu (right click) callback\r\n  emptyCellDropCallback: undefined, // empty cell drag drop callback. HTML5 Drag & Drop\r\n  emptyCellDragCallback: undefined, // empty cell drag and create item like excel cell selection\r\n  emptyCellDragMaxCols: 50, // limit empty cell drag max cols\r\n  emptyCellDragMaxRows: 50, // limit empty cell drag max rows\r\n  // Arguments: event, gridsterItem{x, y, rows: defaultItemRows, cols: defaultItemCols}\r\n  ignoreMarginInRow: false, // ignore the gap between rows for items which span multiple rows (see #162, #224)\r\n  draggable: {\r\n    delayStart: 0, // milliseconds to delay the start of drag, useful for touch interaction\r\n    enabled: false, // enable/disable draggable items\r\n    ignoreContentClass: 'gridster-item-content', // default content class to ignore the drag event from\r\n    ignoreContent: false, // if true drag will start only from elements from `dragHandleClass`\r\n    dragHandleClass: 'drag-handler', // drag event only from this class. If `ignoreContent` is true.\r\n    stop: undefined, // callback when dragging an item stops.  Accepts Promise return to cancel/approve drag.\r\n    start: undefined, // callback when dragging an item starts.\r\n    // Arguments: item, gridsterItem, event\r\n    dropOverItems: false, // enable drop items on top other item\r\n    dropOverItemsCallback: undefined, // callback on drop over another item\r\n    // Arguments: source, target, gridComponent\r\n    dropOverItemSplit: false, // 允许Item放入另一个Item中切分目标Item的大小，开启时要保证dropOverItemStack为false\r\n    dropOverItemStack: false // 允许Item堆叠，即可自由布局，开启时要保证dropOverItemSplit为false\r\n  },\r\n  resizable: {\r\n    delayStart: 0, // milliseconds to delay the start of resize, useful for touch interaction\r\n    enabled: false, // enable/disable resizable items\r\n    handles: {\r\n      s: true,\r\n      e: true,\r\n      n: true,\r\n      w: true,\r\n      se: true,\r\n      ne: true,\r\n      sw: true,\r\n      nw: true\r\n    }, // resizable edges of an item\r\n    stop: undefined, // callback when resizing an item stops. Accepts Promise return to cancel/approve resize.\r\n    start: undefined // callback when resizing an item starts.\r\n    // Arguments: item, gridsterItem, event\r\n  },\r\n  swap: true, // allow items to switch position if drop on top of another\r\n  swapWhileDragging: false, // allow items to switch position while dragging\r\n  pushItems: false, // push items when resizing and dragging\r\n  disablePushOnDrag: false, // disable push on drag\r\n  disablePushOnResize: false, // disable push on resize\r\n  pushDirections: {north: true, east: true, south: true, west: true}, // control the directions items are pushed\r\n  pushResizeItems: false, // on resize of item will shrink adjacent items\r\n  displayGrid: DisplayGrid.OnDragAndResize, // display background grid of rows and columns\r\n  disableWindowResize: false, // disable the window on resize listener. This will stop grid to recalculate on window resize.\r\n  disableWarnings: false, // disable console log warnings about misplacement of grid items\r\n  scrollToNewItems: false, // scroll to new items placed in a scrollable view\r\n  disableScrollHorizontal: false, // disable horizontal scrolling\r\n  disableScrollVertical: false, // disable vertical scrolling\r\n  disableAutoPositionOnConflict: false  // disable auto-position of items on conflict state\r\n};\r\n","\r\nimport {GridsterComponentInterface} from './gridster.interface';\r\n\r\nexport class GridsterUtils {\r\n\r\n  static merge(obj1: any, obj2: any, properties: any) {\r\n    for (const p in obj2) {\r\n      if (obj2[p] !== void 0 && properties.hasOwnProperty(p)) {\r\n        if (typeof obj2[p] === 'object') {\r\n          obj1[p] = GridsterUtils.merge(obj1[p], obj2[p], properties[p]);\r\n        } else {\r\n          obj1[p] = obj2[p];\r\n        }\r\n      }\r\n    }\r\n\r\n    return obj1;\r\n  }\r\n\r\n  static debounce(func: Function, wait: number): () => void {\r\n    let timeout: any;\r\n    return  (...arg: any[]) => {\r\n      const context = this;\r\n      const args = arg;\r\n      const later = function () {\r\n        timeout = null;\r\n        func.apply(context, args);\r\n      };\r\n      clearTimeout(timeout);\r\n      timeout = setTimeout(later, wait);\r\n    };\r\n  }\r\n\r\n  static checkTouchEvent(e: any): void {\r\n    if (e.clientX === undefined && e.touches) {\r\n      if (e.touches && e.touches.length) {\r\n        e.clientX = e.touches[0].clientX;\r\n        e.clientY = e.touches[0].clientY;\r\n      } else if (e.changedTouches && e.changedTouches.length) {\r\n        e.clientX = e.changedTouches[0].clientX;\r\n        e.clientY = e.changedTouches[0].clientY;\r\n      }\r\n    }\r\n  }\r\n\r\n  static checkContentClassForEvent(gridster: GridsterComponentInterface, e: any): boolean {\r\n    if (gridster.$options.draggable.ignoreContent) {\r\n      if (!GridsterUtils.checkContentClass(e.target, e.currentTarget, gridster.$options.draggable.dragHandleClass)) {\r\n        return true;\r\n      }\r\n    } else {\r\n      if (GridsterUtils.checkContentClass(e.target, e.currentTarget, gridster.$options.draggable.ignoreContentClass)) {\r\n        return true;\r\n      }\r\n    }\r\n    return false;\r\n  }\r\n\r\n  static checkContentClassForEmptyCellClickEvent(gridster: GridsterComponentInterface, e: any): boolean {\r\n    return GridsterUtils.checkContentClass(e.target, e.currentTarget, gridster.$options.draggable.ignoreContentClass)\r\n      || GridsterUtils.checkContentClass(e.target, e.currentTarget, gridster.$options.draggable.dragHandleClass);\r\n  }\r\n\r\n  static checkContentClass(target: any, current: any, contentClass: string): boolean {\r\n    if (!target || target === current) {\r\n      return false;\r\n    }\r\n    if (target.hasAttribute('class') && target.getAttribute('class').split(' ').indexOf(contentClass) > -1) {\r\n      return true;\r\n    } else {\r\n      return GridsterUtils.checkContentClass(target.parentNode, current, contentClass);\r\n    }\r\n  }\r\n\r\n  static compareItems(a: { x: number, y: number }, b: { x: number, y: number }): number {\r\n    if (a.y > b.y) {\r\n      return -1;\r\n    } else if (a.y < b.y) {\r\n      return 1;\r\n    } else if (a.x > b.x) {\r\n      return -1;\r\n    } else {\r\n      return 1;\r\n    }\r\n  }\r\n}\r\n","import { GridsterItemComponentInterface } from \"./gridsterItemComponent.interface\";\r\n\r\nexport interface GridsterItemInterface {\r\n    x: number;\r\n    y: number;\r\n    rows: number;\r\n    cols: number;\r\n    initCallback?: (item: GridsterItemInterface, itemComponent: GridsterItemComponentInterface) => void;\r\n    dragEnabled?: boolean;\r\n    resizeEnabled?: boolean;\r\n    compactEnabled?: boolean;\r\n    maxItemRows?: number;\r\n    minItemRows?: number;\r\n    maxItemCols?: number;\r\n    minItemCols?: number;\r\n    minItemArea?: number;\r\n    maxItemArea?: number;\r\n  \r\n    spliting?: GridsterItemSplitMode,\r\n    /** 被切分的item */\r\n    splitingItemComponent?: GridsterItemComponentInterface,\r\n  \r\n    /** 以下5个属性用于堆叠模式　*/\r\n    left?: number;\r\n    top?: number;\r\n    zIndex?: number;\r\n    width?: number;\r\n    height?: number;\r\n  \r\n    [propName: string]: any;\r\n  }\r\n  /** 分裂模式（或者说分裂的位置） */\r\n  export enum GridsterItemSplitMode {\r\n    up = 'up',\r\n    down = 'down',\r\n    left = 'left',\r\n    right = 'right'\r\n  }","import {GridsterUtils} from './gridsterUtils.service';\r\nimport {GridsterItemInterface, GridsterItemSplitMode} from './gridsterItem.interface';\r\nimport {GridsterComponentInterface} from './gridster.interface';\r\nimport { GridsterItemComponentInterface } from './gridsterItemComponent.interface';\r\nimport { GridType } from './gridsterConfig.interface';\r\n\r\nexport class GridsterEmptyCell {\r\n  initialItem: GridsterItemInterface | null;\r\n  emptyCellClick: Function | null;\r\n  emptyCellClickTouch: Function | null;\r\n  emptyCellContextMenu: Function | null;\r\n  emptyCellDrop: Function | null;\r\n  emptyCellDrag: Function | null;\r\n  emptyCellDragTouch: Function | null;\r\n  emptyCellMMove: Function;\r\n  emptyCellMMoveTouch: Function;\r\n  emptyCellUp: Function;\r\n  emptyCellUpTouch: Function;\r\n  emptyCellMove: Function | null;\r\n  emptyCellExit: Function | null;\r\n\r\n  constructor(private gridster: GridsterComponentInterface) {\r\n  }\r\n\r\n  destroy(): void {\r\n    delete this.initialItem;\r\n    delete this.gridster.movingItem;\r\n    if (this.gridster.previewStyle && !this.gridster.$options.draggable.dropOverItemStack) {   // 堆叠模式下无需预览放置效果\r\n      this.gridster.previewStyle();\r\n    }\r\n    delete this.gridster;\r\n    if (this.emptyCellExit) {\r\n      this.emptyCellExit();\r\n      this.emptyCellExit = null;\r\n    }\r\n  }\r\n\r\n  updateOptions(): void {\r\n    if (this.gridster.$options.enableEmptyCellClick && !this.emptyCellClick && this.gridster.options.emptyCellClickCallback) {\r\n      this.emptyCellClick = this.gridster.renderer.listen(this.gridster.el, 'click', this.emptyCellClickCb.bind(this));\r\n      this.emptyCellClickTouch = this.gridster.renderer.listen(this.gridster.el, 'touchend', this.emptyCellClickCb.bind(this));\r\n    } else if (!this.gridster.$options.enableEmptyCellClick && this.emptyCellClick && this.emptyCellClickTouch) {\r\n      this.emptyCellClick();\r\n      this.emptyCellClickTouch();\r\n      this.emptyCellClick = null;\r\n      this.emptyCellClickTouch = null;\r\n    }\r\n    if (this.gridster.$options.enableEmptyCellContextMenu && !this.emptyCellContextMenu &&\r\n      this.gridster.options.emptyCellContextMenuCallback) {\r\n      this.emptyCellContextMenu = this.gridster.renderer.listen(this.gridster.el, 'contextmenu', this.emptyCellContextMenuCb.bind(this));\r\n    } else if (!this.gridster.$options.enableEmptyCellContextMenu && this.emptyCellContextMenu) {\r\n      this.emptyCellContextMenu();\r\n      this.emptyCellContextMenu = null;\r\n    }\r\n    if (this.gridster.$options.enableEmptyCellDrop && !this.emptyCellDrop && this.gridster.options.emptyCellDropCallback) {\r\n      this.emptyCellDrop = this.gridster.renderer.listen(this.gridster.el, 'drop', this.emptyCellDragDrop.bind(this));\r\n      // this.gridster.zone.runOutsideAngular(() => {\r\n      //   this.emptyCellMove = this.gridster.renderer.listen(this.gridster.el, 'dragover', this.emptyCellDragOver.bind(this));\r\n      // });\r\n      // this.emptyCellExit = this.gridster.renderer.listen('document', 'dragend', () => {\r\n      //   this.gridster.movingItem = null;\r\n      //   if (!this.gridster.$options.draggable.dropOverItemStack) {   // 堆叠模式下无需预览放置效果\r\n      //     this.gridster.previewStyle();\r\n      //   }\r\n      // });\r\n    } else if (!this.gridster.$options.enableEmptyCellDrop && this.emptyCellDrop && this.emptyCellMove && this.emptyCellExit) {\r\n      this.emptyCellDrop();\r\n      this.emptyCellMove();\r\n      this.emptyCellExit();\r\n      this.emptyCellMove = null;\r\n      this.emptyCellDrop = null;\r\n      this.emptyCellExit = null;\r\n    }\r\n    if (this.gridster.$options.enableEmptyCellDrag && !this.emptyCellDrag && this.gridster.options.emptyCellDragCallback) {\r\n      this.emptyCellDrag = this.gridster.renderer.listen(this.gridster.el, 'mousedown', this.emptyCellMouseDown.bind(this));\r\n      this.emptyCellDragTouch = this.gridster.renderer.listen(this.gridster.el, 'touchstart', this.emptyCellMouseDown.bind(this));\r\n    } else if (!this.gridster.$options.enableEmptyCellDrag && this.emptyCellDrag && this.emptyCellDragTouch) {\r\n      this.emptyCellDrag();\r\n      this.emptyCellDragTouch();\r\n      this.emptyCellDrag = null;\r\n      this.emptyCellDragTouch = null;\r\n    }\r\n  }\r\n\r\n  emptyCellClickCb(e: any): void {\r\n    if (this.gridster.movingItem || GridsterUtils.checkContentClassForEmptyCellClickEvent(this.gridster, e)) {\r\n      return;\r\n    }\r\n    const item = this.getValidItemFromEvent(e);\r\n    if (!item) {\r\n      return;\r\n    }\r\n    if (this.gridster.options.emptyCellClickCallback) {\r\n      this.gridster.options.emptyCellClickCallback(e, item);\r\n    }\r\n  }\r\n\r\n  emptyCellContextMenuCb(e: any): void {\r\n    if (this.gridster.movingItem || GridsterUtils.checkContentClassForEmptyCellClickEvent(this.gridster, e)) {\r\n      return;\r\n    }\r\n    e.preventDefault();\r\n    e.stopPropagation();\r\n    const item = this.getValidItemFromEvent(e);\r\n    if (!item) {\r\n      return;\r\n    }\r\n    if (this.gridster.options.emptyCellContextMenuCallback) {\r\n      this.gridster.options.emptyCellContextMenuCallback(e, item);\r\n    }\r\n  }\r\n\r\n  emptyCellDragDrop(e: any): void {\r\n    const item = this.getValidItemFromEvent(e);\r\n    if (!item) {\r\n      return;\r\n    }\r\n    // 分裂模式\r\n    if (item.spliting && item.splitingItemComponent) {\r\n      const overItem = item.splitingItemComponent.item;\r\n      // 根据当前分裂位置，对被分割的item大小进行处理\r\n      switch (item.spliting) {\r\n        case GridsterItemSplitMode.up:\r\n          overItem.y += item.rows;\r\n          overItem.rows = overItem.rows - item.rows;\r\n          break;\r\n        case GridsterItemSplitMode.down:\r\n          overItem.rows = overItem.rows - item.rows;\r\n          break;\r\n        case GridsterItemSplitMode.left:\r\n          overItem.x += item.cols;\r\n          overItem.cols = overItem.cols - item.cols;\r\n          break;\r\n        case GridsterItemSplitMode.right:\r\n          overItem.cols = overItem.cols - item.cols;\r\n          break;\r\n      }\r\n      item.splitingItemComponent.updateOptions();\r\n    }\r\n    if (this.gridster.options.emptyCellDropCallback) {\r\n      this.gridster.options.emptyCellDropCallback(e, item);\r\n    }\r\n  }\r\n\r\n  emptyCellDragOver(e: any): void {\r\n    e.preventDefault();\r\n    e.stopPropagation();\r\n    // 通道过滤，不能让所有东西都能拖拽进来\r\n    // 可拖拽进入的元素都会加上指令insightGridsterDragger，这个指令会在拖拽时给元素加上一个dragChannel = 'gridster'的属性，只有这个属性，才能被拖拽进来\r\n    const draggingDom = (<any>e.srcElement || e.target).ownerDocument.querySelector('[dragChannel]');\r\n    if (!draggingDom || 'gridster' != draggingDom.getAttribute('dragChannel')) {\r\n      e.dataTransfer.dropEffect = 'none';\r\n      this.gridster.movingItem = null;\r\n      return;\r\n    }\r\n    const item = this.getValidItemFromEvent(e);\r\n    if (item) {\r\n      e.dataTransfer.dropEffect = 'move';\r\n      this.gridster.movingItem = item;\r\n    } else {\r\n      e.dataTransfer.dropEffect = 'none';\r\n      this.gridster.movingItem = null;\r\n    }\r\n    if (!this.gridster.$options.draggable.dropOverItemStack) {   // 堆叠模式下无需预览放置效果\r\n      this.gridster.previewStyle();\r\n    }\r\n  }\r\n\r\n  emptyCellMouseDown(e: any): void {\r\n    if (GridsterUtils.checkContentClassForEmptyCellClickEvent(this.gridster, e)) {\r\n      return;\r\n    }\r\n    e.preventDefault();\r\n    e.stopPropagation();\r\n    const item = this.getValidItemFromEvent(e);\r\n    const leftMouseButtonCode = 1;\r\n    if (!item || e.buttons !== leftMouseButtonCode) {\r\n      return;\r\n    }\r\n    this.initialItem = item;\r\n    this.gridster.movingItem = item;\r\n    if (!this.gridster.$options.draggable.dropOverItemStack) {   // 堆叠模式下无需预览放置效果\r\n      this.gridster.previewStyle();\r\n    }\r\n    // this.gridster.zone.runOutsideAngular(() => {\r\n    //   this.emptyCellMMove = this.gridster.renderer.listen('window', 'mousemove', this.emptyCellMouseMove.bind(this));\r\n    //   this.emptyCellMMoveTouch = this.gridster.renderer.listen('window', 'touchmove', this.emptyCellMouseMove.bind(this));\r\n    // });\r\n    this.emptyCellUp = this.gridster.renderer.listen('window', 'mouseup', this.emptyCellMouseUp.bind(this));\r\n    this.emptyCellUpTouch = this.gridster.renderer.listen('window', 'touchend', this.emptyCellMouseUp.bind(this));\r\n  }\r\n\r\n  emptyCellMouseMove(e: any): void {\r\n    e.preventDefault();\r\n    e.stopPropagation();\r\n    const item = this.getValidItemFromEvent(e, this.initialItem);\r\n    if (!item) {\r\n      return;\r\n    }\r\n\r\n    this.gridster.movingItem = item;\r\n    if (!this.gridster.$options.draggable.dropOverItemStack) {   // 堆叠模式下无需预览放置效果\r\n      this.gridster.previewStyle();\r\n    }\r\n  }\r\n\r\n  emptyCellMouseUp(e: any): void {\r\n    this.emptyCellMMove();\r\n    this.emptyCellMMoveTouch();\r\n    this.emptyCellUp();\r\n    this.emptyCellUpTouch();\r\n    const item = this.getValidItemFromEvent(e, this.initialItem);\r\n    if (item) {\r\n      this.gridster.movingItem = item;\r\n    }\r\n    if (this.gridster.options.emptyCellDragCallback && this.gridster.movingItem) {\r\n      this.gridster.options.emptyCellDragCallback(e, this.gridster.movingItem);\r\n    }\r\n    setTimeout(() => {\r\n      this.initialItem = null;\r\n      if (this.gridster) {\r\n        this.gridster.movingItem = null;\r\n        if (!this.gridster.$options.draggable.dropOverItemStack) {   // 堆叠模式下无需预览放置效果\r\n          this.gridster.previewStyle();\r\n        }\r\n      }\r\n    });\r\n  }\r\n\r\n  getValidItemFromEvent(e: any, oldItem?: GridsterItemInterface | null): GridsterItemInterface | undefined {\r\n    e.preventDefault();\r\n    e.stopPropagation();\r\n    GridsterUtils.checkTouchEvent(e);\r\n    const rect = this.gridster.el.getBoundingClientRect();\r\n    const x = e.clientX + this.gridster.el.scrollLeft - rect.left - this.gridster.$options.margin;\r\n    const y = e.clientY + this.gridster.el.scrollTop - rect.top - this.gridster.$options.margin;\r\n    let item: GridsterItemInterface = {\r\n      x: this.gridster.pixelsToPositionX(x, Math.floor, true),\r\n      y: this.gridster.pixelsToPositionY(y, Math.floor, true),\r\n      cols: this.gridster.$options.defaultItemCols,\r\n      rows: this.gridster.$options.defaultItemRows\r\n    };\r\n    let overItem: GridsterItemComponentInterface;// 重叠的图表\r\n    if (this.gridster.$options.draggable.dropOverItemSplit) { // 开启分裂，允许堆叠上其它的已存在的图表，并且最大程度占满空白单元格（通常minRows = maxRows和minCols = maxCols）\r\n      const checkItem: GridsterItemInterface = {\r\n        x: Math.max(0, item.x), y: Math.max(0, item.y), cols: 1, rows: 1 // 计算重叠时，按一个格子计算\r\n      }\r\n      if ((overItem = <GridsterItemComponentInterface>this.gridster.findItemWithItem(checkItem))) {\r\n        const splitUD = (overItem.$item.rows >= this.gridster.$options.minItemRows * 2 &&\r\n          overItem.$item.cols >= this.gridster.$options.minItemCols &&\r\n          Math.ceil(overItem.$item.rows / 2) >= (overItem.$item.minItemRows || this.gridster.$options.minItemRows)), // 允许上下分（行是2倍，列1倍，原overItem减去分裂的行之后还够自己的最小行数）\r\n          splitLR = overItem.$item.cols >= this.gridster.$options.minItemCols * 2 &&\r\n            overItem.$item.rows >= this.gridster.$options.minItemRows &&\r\n            Math.ceil(overItem.$item.cols / 2) >= (overItem.$item.minItemCols || this.gridster.$options.minItemCols), // 允许左右分（列2倍，行一倍）\r\n          halfPositionX = overItem.left + overItem.width / 2,\r\n          halfPositionY = overItem.top + overItem.height / 2,\r\n          angle = Math.atan2(overItem.height, overItem.width); // 计算鼠标位置与X轴夹角（对边，临边），只计算弧度也一样 * 180 / Math.PI;\r\n\r\n        if (x < halfPositionX && y < halfPositionY) { // 左上部分\r\n          const tmpAngle = Math.atan2(y - overItem.top, x - overItem.left); // * 180 / Math.PI;\r\n          if (tmpAngle > angle && splitLR) { // 左边\r\n            this.splitItem(item, overItem, GridsterItemSplitMode.left);\r\n          } else if (splitUD) { // 上边\r\n            this.splitItem(item, overItem, GridsterItemSplitMode.up);\r\n          }\r\n        } else if (x < halfPositionX && y > halfPositionY) { // 左下部分\r\n          const tmpAngle = Math.atan2(overItem.top + overItem.height - y, x - overItem.left); // * 180 / Math.PI;\r\n          if (tmpAngle > angle && splitLR) { // 左边\r\n            this.splitItem(item, overItem, GridsterItemSplitMode.left);\r\n          } else if (splitUD) { // 下边\r\n            this.splitItem(item, overItem, GridsterItemSplitMode.down);\r\n          }\r\n        } else if (x > halfPositionX && y < halfPositionY) { // 右上部分\r\n          const tmpAngle = Math.atan2(y - overItem.top, overItem.left + overItem.width - x); // * 180 / Math.PI;\r\n          if (tmpAngle > angle && splitLR) { // 右边\r\n            this.splitItem(item, overItem, GridsterItemSplitMode.right);\r\n          } else if (splitUD) { // 上边\r\n            this.splitItem(item, overItem, GridsterItemSplitMode.up);\r\n          }\r\n        } else if (x > halfPositionX && y > halfPositionY) { // 右下部分\r\n          const tmpAngle = Math.atan2(overItem.top + overItem.height - y, overItem.left + overItem.width - x); // * 180 / Math.PI;\r\n          if (tmpAngle > angle && splitLR) { // 右边\r\n            this.splitItem(item, overItem, GridsterItemSplitMode.right);\r\n          } else if (splitUD) { // 下边\r\n            this.splitItem(item, overItem, GridsterItemSplitMode.down);\r\n          }\r\n        }\r\n      } else { // 拖拽到空白处，尽最大可能占满\r\n        const leftReferenceItem = this.checkdReferenceItem(Object.assign({}, checkItem), 'left'), // 向左找参照物\r\n          rightReferenceItem = this.checkdReferenceItem(Object.assign({}, checkItem), 'right'); // 向右找参照物\r\n        checkItem.x = leftReferenceItem ? leftReferenceItem.$item.x + leftReferenceItem.$item.cols : 0;\r\n        checkItem.cols = (rightReferenceItem ? rightReferenceItem.$item.x : this.gridster.$options.maxCols) - checkItem.x;\r\n\r\n        if (this.gridster.$options.gridType === GridType.Fit) { //需要高度也自适应才占满高度\r\n          const topReferenceItem = this.checkdReferenceItem(Object.assign({}, checkItem), 'top'), // 向上找参照物\r\n            bottomReferenceItem = this.checkdReferenceItem(Object.assign({}, checkItem), 'bottom'); // 向下找参照物\r\n          checkItem.y = topReferenceItem ? topReferenceItem.$item.y + topReferenceItem.$item.rows : 0;\r\n          checkItem.rows = (bottomReferenceItem ? bottomReferenceItem.$item.y : this.gridster.$options.maxRows) - checkItem.y;\r\n          item = checkItem;\r\n        } else {\r\n          item.x = checkItem.x;\r\n          item.cols = checkItem.cols;\r\n        }\r\n      }\r\n    }\r\n    if (oldItem) {\r\n      item.cols = Math.min(Math.abs(oldItem.x - item.x) + 1, this.gridster.$options.emptyCellDragMaxCols);\r\n      item.rows = Math.min(Math.abs(oldItem.y - item.y) + 1, this.gridster.$options.emptyCellDragMaxRows);\r\n      if (oldItem.x < item.x) {\r\n        item.x = oldItem.x;\r\n      } else if (oldItem.x - item.x > this.gridster.$options.emptyCellDragMaxCols - 1) {\r\n        item.x = this.gridster.movingItem ? this.gridster.movingItem.x : 0;\r\n      }\r\n      if (oldItem.y < item.y) {\r\n        item.y = oldItem.y;\r\n      } else if (oldItem.y - item.y > this.gridster.$options.emptyCellDragMaxRows - 1) {\r\n        item.y = this.gridster.movingItem ? this.gridster.movingItem.y : 0;\r\n      }\r\n    }\r\n    // if (!this.gridster.$options.enableOccupiedCellDrop && this.gridster.checkCollision(item)) {\r\n    //   return;\r\n    // }\r\n    // 非分裂、非堆叠模式需要校验单元格冲突\r\n    if (!this.gridster.$options.draggable.dropOverItemSplit && !this.gridster.$options.draggable.dropOverItemStack && this.gridster.checkCollision(item)) {\r\n      return;\r\n    }\r\n    return item;\r\n  }\r\n  /** 分裂单元格 */\r\n  splitItem(item: GridsterItemInterface, overItem: GridsterItemComponentInterface, mode: GridsterItemSplitMode): void {\r\n    item.spliting = mode; // 记录当前分裂模式\r\n    item.splitingItemComponent = overItem; // 记录分裂谁\r\n    switch (mode) {\r\n      // 根据当前分裂位置，对item大小、位置进行处理\r\n      case GridsterItemSplitMode.up: // 上\r\n        item.x = overItem.$item.x;\r\n        item.y = overItem.$item.y;\r\n        item.rows = Math.floor(overItem.$item.rows / 2);\r\n        item.cols = overItem.$item.cols;\r\n        break;\r\n      case GridsterItemSplitMode.down: // 下\r\n        item.x = overItem.$item.x;\r\n        item.y = Math.ceil(overItem.$item.y + overItem.$item.rows / 2);\r\n        item.rows = Math.floor(overItem.$item.rows / 2);\r\n        item.cols = overItem.$item.cols;\r\n        break;\r\n      case GridsterItemSplitMode.left: // 左\r\n        item.x = overItem.$item.x;\r\n        item.y = overItem.$item.y;\r\n        item.rows = overItem.$item.rows;\r\n        item.cols = Math.floor(overItem.$item.cols / 2);\r\n        break;\r\n      case GridsterItemSplitMode.right: // 右\r\n        item.x = Math.ceil(overItem.$item.x + overItem.$item.cols / 2);\r\n        item.y = overItem.$item.y;\r\n        item.rows = overItem.$item.rows;\r\n        item.cols = Math.floor(overItem.$item.cols / 2);\r\n        break;\r\n    }\r\n  }\r\n  /** 找出参照物 */\r\n  checkdReferenceItem(checkItem: GridsterItemInterface, pos: string): GridsterItemComponentInterface | undefined {\r\n    let findItem = this.gridster.findItemWithItem(checkItem);\r\n    if (!findItem) {\r\n      switch (pos) {\r\n        case 'left':\r\n          if (checkItem.x <= 1) return undefined;\r\n          checkItem.x -= 1;\r\n          break;\r\n        case 'right':\r\n          if (checkItem.x >= this.gridster.$options.maxCols) return undefined;\r\n          checkItem.x += 1;\r\n          break;\r\n        case 'top':\r\n          if (checkItem.y <= 1) return undefined;\r\n          checkItem.y -= 1;\r\n          break;\r\n        case 'bottom':\r\n          if (checkItem.y >= this.gridster.$options.maxRows) return undefined;\r\n          checkItem.y += 1;\r\n          break;\r\n        default:\r\n          return undefined;\r\n      }\r\n      findItem = this.checkdReferenceItem(checkItem, pos) || false;\r\n    }\r\n    return findItem ? <GridsterItemComponentInterface>findItem : undefined;\r\n  }\r\n  fitByReferenceItem(updateItem: GridsterItemInterface, leftReferenceItem: GridsterItemComponentInterface, rightReferenceItem: GridsterItemComponentInterface): boolean {\r\n    if (leftReferenceItem && !rightReferenceItem) { // 只有左边有参照物\r\n      if (this.gridster.$options.minItemRows > leftReferenceItem.$item.rows) return false; // 高度不够\r\n      if (this.gridster.$options.minItemCols > this.gridster.$options.maxCols - leftReferenceItem.$item.x - leftReferenceItem.$item.cols) return false; // 宽度不够\r\n      updateItem.x = leftReferenceItem.$item.x + leftReferenceItem.$item.cols;\r\n      updateItem.y = leftReferenceItem.$item.y;\r\n      updateItem.rows = leftReferenceItem.$item.rows;\r\n      updateItem.cols = this.gridster.$options.maxCols - leftReferenceItem.$item.x - leftReferenceItem.$item.cols;\r\n    } else if (!leftReferenceItem && rightReferenceItem) { // 只有右边有参照物\r\n      if (this.gridster.$options.minItemRows > rightReferenceItem.$item.rows) return false; // 高度不够\r\n      if (this.gridster.$options.minItemCols > rightReferenceItem.$item.x) return false; // 宽度不够\r\n      updateItem.x = 0;\r\n      updateItem.y = rightReferenceItem.$item.y;\r\n      updateItem.rows = rightReferenceItem.$item.rows;\r\n      updateItem.cols = rightReferenceItem.$item.x;\r\n    } else if (leftReferenceItem && rightReferenceItem) { // 两边都有参照物\r\n      if (this.gridster.$options.minItemRows > leftReferenceItem.$item.rows) return false; // 高度不够\r\n      if (this.gridster.$options.minItemCols > rightReferenceItem.$item.x - leftReferenceItem.$item.x - leftReferenceItem.$item.cols) return false; // 宽度不够\r\n      updateItem.x = leftReferenceItem.$item.x + leftReferenceItem.$item.cols;\r\n      updateItem.y = leftReferenceItem.$item.y;\r\n      updateItem.rows = leftReferenceItem.$item.rows;\r\n      updateItem.cols = rightReferenceItem.$item.x - leftReferenceItem.$item.x - leftReferenceItem.$item.cols;\r\n    }\r\n    return true;\r\n  }\r\n}\r\n","import {GridsterComponentInterface} from './gridster.interface';\r\nimport {GridsterItemComponentInterface} from './gridsterItemComponent.interface';\r\nimport {GridsterItemInterface} from './gridsterItem.interface';\r\nimport {CompactType} from './gridsterConfig.interface';\r\n\r\nexport class GridsterCompact {\r\n\r\n  constructor(private gridster: GridsterComponentInterface) {\r\n  }\r\n\r\n  destroy(): void {\r\n    delete this.gridster;\r\n  }\r\n\r\n  checkCompact(): void {\r\n    if (this.gridster.$options.compactType !== CompactType.None) {\r\n      if (this.gridster.$options.compactType === CompactType.CompactUp) {\r\n        this.checkCompactUp();\r\n      } else if (this.gridster.$options.compactType === CompactType.CompactLeft) {\r\n        this.checkCompactLeft();\r\n      } else if (this.gridster.$options.compactType === CompactType.CompactUpAndLeft) {\r\n        this.checkCompactUp();\r\n        this.checkCompactLeft();\r\n      } else if (this.gridster.$options.compactType === CompactType.CompactLeftAndUp) {\r\n        this.checkCompactLeft();\r\n        this.checkCompactUp();\r\n      } else if (this.gridster.$options.compactType === CompactType.CompactRight) {\r\n        this.checkCompactRight();\r\n      } else if (this.gridster.$options.compactType === CompactType.CompactUpAndRight) {\r\n        this.checkCompactUp();\r\n        this.checkCompactRight();\r\n      } else if (this.gridster.$options.compactType === CompactType.CompactRightAndUp) {\r\n        this.checkCompactRight();\r\n        this.checkCompactUp();\r\n      }\r\n    }\r\n  }\r\n\r\n  checkCompactItem(item: GridsterItemInterface): void {\r\n    if (this.gridster.$options.compactType !== CompactType.None) {\r\n      if (this.gridster.$options.compactType === CompactType.CompactUp) {\r\n        this.moveUpTillCollision(item);\r\n      } else if (this.gridster.$options.compactType === CompactType.CompactLeft) {\r\n        this.moveLeftTillCollision(item);\r\n      } else if (this.gridster.$options.compactType === CompactType.CompactUpAndLeft) {\r\n        this.moveUpTillCollision(item);\r\n        this.moveLeftTillCollision(item);\r\n      } else if (this.gridster.$options.compactType === CompactType.CompactLeftAndUp) {\r\n        this.moveLeftTillCollision(item);\r\n        this.moveUpTillCollision(item);\r\n      } else if (this.gridster.$options.compactType === CompactType.CompactUpAndRight) {\r\n        this.moveUpTillCollision(item);\r\n        this.moveRightTillCollision(item);\r\n      }\r\n    }\r\n  }\r\n\r\n  checkCompactUp(): void {\r\n    let widgetMovedUp = false, widget: GridsterItemComponentInterface, moved: boolean;\r\n    const l = this.gridster.grid.length;\r\n    for (let i = 0; i < l; i++) {\r\n      widget = this.gridster.grid[i];\r\n      if (widget.$item.compactEnabled === false) {\r\n        continue;\r\n      }\r\n      moved = this.moveUpTillCollision(widget.$item);\r\n      if (moved) {\r\n        widgetMovedUp = true;\r\n        widget.item.y = widget.$item.y;\r\n        widget.itemChanged();\r\n      }\r\n    }\r\n    if (widgetMovedUp) {\r\n      this.checkCompact();\r\n    }\r\n  }\r\n\r\n  moveUpTillCollision(item: GridsterItemInterface): boolean {\r\n    item.y -= 1;\r\n    if (this.gridster.checkCollision(item)) {\r\n      item.y += 1;\r\n      return false;\r\n    } else {\r\n      this.moveUpTillCollision(item);\r\n      return true;\r\n    }\r\n  }\r\n\r\n  checkCompactLeft(): void {\r\n    let widgetMovedUp = false, widget: GridsterItemComponentInterface, moved: boolean;\r\n    const l = this.gridster.grid.length;\r\n    for (let i = 0; i < l; i++) {\r\n      widget = this.gridster.grid[i];\r\n      if (widget.$item.compactEnabled === false) {\r\n        continue;\r\n      }\r\n      moved = this.moveLeftTillCollision(widget.$item);\r\n      if (moved) {\r\n        widgetMovedUp = true;\r\n        widget.item.x = widget.$item.x;\r\n        widget.itemChanged();\r\n      }\r\n    }\r\n    if (widgetMovedUp) {\r\n      this.checkCompact();\r\n    }\r\n  }\r\n\r\n  checkCompactRight(): void {\r\n    let widgetMovedUp = false, widget: GridsterItemComponentInterface, moved: boolean;\r\n    const l = this.gridster.grid.length;\r\n    for (let i = 0; i < l; i++) {\r\n      widget = this.gridster.grid[i];\r\n      if (widget.$item.compactEnabled === false) {\r\n        continue;\r\n      }\r\n      moved = this.moveRightTillCollision(widget.$item);\r\n      if (moved) {\r\n        widgetMovedUp = true;\r\n        widget.item.x = widget.$item.x;\r\n        widget.itemChanged();\r\n      }\r\n    }\r\n    if (widgetMovedUp) {\r\n      this.checkCompact();\r\n    }\r\n  }\r\n\r\n  moveLeftTillCollision(item: GridsterItemInterface): boolean {\r\n    item.x -= 1;\r\n    if (this.gridster.checkCollision(item)) {\r\n      item.x += 1;\r\n      return false;\r\n    } else {\r\n      this.moveLeftTillCollision(item);\r\n      return true;\r\n    }\r\n  }\r\n\r\n  moveRightTillCollision(item: GridsterItemInterface) {\r\n    item.x += 1;\r\n    if (this.gridster.checkCollision(item)) {\r\n      item.x -= 1;\r\n      return false;\r\n    } else {\r\n      this.moveRightTillCollision(item);\r\n      return true;\r\n    }\r\n  }\r\n}\r\n","import * as React from 'react'\nimport { GridsterConfig } from './gridsterConfig.interface';\nimport { GridsterConfigS } from './gridsterConfigS.interface';\nimport { GridsterRenderer } from './gridsterRenderer';\nimport { GridsterItemInterface } from './gridsterItem.interface';\nimport { GridsterItemComponentInterface } from './gridsterItemComponent.interface';\nimport { Renderer } from './utils/renderer';\nimport { GridsterConfigService } from './gridsterConfig.constant';\nimport { GridsterEmptyCell } from './gridsterEmptyCell';\nimport { GridsterCompact } from './gridsterCompact';\nimport { GridsterUtils } from './gridsterUtils.service';\nimport debounce from 'lodash/debounce';\nimport styles from './styles.module.css'\n\ninterface Props {\n  options: GridsterConfig;\n}\n\nexport class Gridster extends React.Component<Props> {\n  calculateLayoutDebounce: () => void;\n  movingItem: GridsterItemInterface | null;\n  previewStyle: () => void;\n  elRef: any;\n  el: any;\n  $options: GridsterConfigS;\n  options: GridsterConfig;\n  mobile: boolean;\n  curWidth: number;\n  curHeight: number;\n  grid: Array<GridsterItemComponentInterface>;\n  columns = 12;\n  rows = 12;\n  curColWidth: number;\n  curRowHeight: number;\n  gridColumns = [];\n  gridRows = [];\n  windowResize: (() => void) | null;\n  dragInProgress: boolean;\n  emptyCell: GridsterEmptyCell;\n  compact: GridsterCompact;\n  gridRenderer: GridsterRenderer = new GridsterRenderer(this);\n\n  renderer: Renderer = new Renderer();\n\n  state = {\n    columns: 12,\n    rows: 12,\n    curWidth: 0,\n    curHeight: 0,\n    curColWidth: 0,\n    curRowHeight: 0,\n  }\n\n  constructor(props: Props) {\n    super(props);\n    this.elRef = React.createRef();\n    this.$options = JSON.parse(JSON.stringify(GridsterConfigService));\n    this.calculateLayoutDebounce = GridsterUtils.debounce(this.calculateLayout.bind(this), 0);\n    this.mobile = false;\n    this.curWidth = 0;\n    this.curHeight = 0;\n    this.grid = [];\n    this.curColWidth = 0;\n    this.curRowHeight = 0;\n    this.dragInProgress = false;\n    this.emptyCell = new GridsterEmptyCell(this);\n    this.compact = new GridsterCompact(this);\n    this.gridRenderer = new GridsterRenderer(this);\n   \n    console.log(props);\n    if (this.props.options) {\n      this.options = this.props.options;\n      this.setOptions();\n      this.columns = this.$options.minCols;\n      this.rows = this.$options.minRows;\n    }\n  }\n\n\n  componentDidUpdate() {\n    this.columns = this.$options.minCols;\n    this.rows = this.$options.minRows;\n    this.setOptions();\n    // this.setGridSize();\n    // this.calculateLayout();\n  }\n\n  componentDidMount() {\n    this.el = this.elRef.current;\n    this.setOptions();\n    this.setGridSize();\n    this.calculateLayout();\n    this.updateGrid();\n    this.forceUpdate();\n  }\n\n  static checkCollisionTwoItems(item: GridsterItemInterface, item2: GridsterItemInterface): boolean {\n    return item.x < item2.x + item2.cols\n      && item.x + item.cols > item2.x\n      && item.y < item2.y + item2.rows\n      && item.y + item.rows > item2.y;\n  }\n\n  findItemWithItem(item: GridsterItemInterface): GridsterItemComponentInterface | boolean {\n    let widgetsIndex: number = this.grid.length - 1, widget: GridsterItemComponentInterface;\n    for (; widgetsIndex > -1; widgetsIndex--) {\n      widget = this.grid[widgetsIndex];\n      if (widget.$item !== item && Gridster.checkCollisionTwoItems(widget.$item, item)) {\n        return widget;\n      }\n    }\n    return false;\n  }\n\n  findItemsWithItem(item: GridsterItemInterface): Array<GridsterItemComponentInterface> {\n    const a: Array<GridsterItemComponentInterface> = [];\n    let widgetsIndex: number = this.grid.length - 1, widget: GridsterItemComponentInterface;\n    for (; widgetsIndex > -1; widgetsIndex--) {\n      widget = this.grid[widgetsIndex];\n      if (widget.$item !== item && Gridster.checkCollisionTwoItems(widget.$item, item)) {\n        a.push(widget);\n      }\n    }\n    return a;\n  }\n\n  checkCollision(item: GridsterItemInterface): GridsterItemComponentInterface | boolean { \n    console.log(item);\n    return false;\n  }\n\n  checkGridCollision(item: GridsterItemInterface): boolean { \n    console.log(item);\n    return false;\n  }\n  // identical to checkCollision() except that this function calls findItemWithItemForSwaping() instead of findItemWithItem()\n  checkCollisionForSwaping(item: GridsterItemInterface): GridsterItemComponentInterface | boolean { \n    console.log(item);\n    return false;\n  }\n\n  pixelsToPositionX(x: number, roundingMethod: Function, noLimit?: boolean): number {\n    const position = roundingMethod(x / this.curColWidth);\n    if (noLimit) {\n      return position;\n    } else {\n      return Math.max(position, 0);\n    }\n  }\n\n  pixelsToPositionY(y: number, roundingMethod: Function, noLimit?: boolean): number {\n    const position = roundingMethod(y / this.curRowHeight);\n    if (noLimit) {\n      return position;\n    } else {\n      return Math.max(position, 0);\n    }\n  }\n\n\n  positionXToPixels(x: number): number {\n    return x * this.curColWidth;\n  }\n\n  positionYToPixels(y: number): number {\n    return y * this.curRowHeight;\n  }\n\n  addItem(itemComponent: GridsterItemComponentInterface): void {\n    console.log(itemComponent);\n  }\n\n  removeItem(itemComponent: GridsterItemComponentInterface): void {\n    console.log(itemComponent);\n  }\n\n  setGridDimensions(): void {\n\n  }\n\n\n  /**\n   * 设置画布整体大小\n   */\n  setGridSize(): void {\n    const el = this.el;\n    let width = el.clientWidth;\n    let height = el.clientHeight;\n    console.log(width, 'w');\n    console.log(height, 'h');\n    if (this.$options?.setGridSize || this.$options?.gridType === 'fit' && !this.mobile) {\n      width = el.offsetWidth;\n      height = el.offsetHeight;\n    } else {\n      width = el.clientWidth;\n      height = el.clientHeight;\n    }\n    this.curWidth = width;\n    this.curHeight = height;\n    console.log(width, 'w');\n    console.log(height, 'h');\n    this.setState({\n      curWidth: this.curWidth,\n      curHeight: this.curHeight\n    });\n  }\n\n  setOptions(): void {\n    this.$options = GridsterUtils.merge(this.$options, this.options, this.$options);\n    console.log(this.options);\n    if (!this.$options.disableWindowResize && !this.windowResize) {\n      this.windowResize = this.renderer.listen('window', 'resize', debounce(this.onResize.bind(this), 200));\n    } else if (this.$options.disableWindowResize && this.windowResize) {\n      this.windowResize();\n      this.windowResize = null;\n    }\n    this.emptyCell.updateOptions();\n  }\n\n  optionsChanged(): void {\n    this.setOptions();\n  }\n\n  calculateLayout() {\n    let marginWidth = -this.$options?.margin || 0;\n    this.curColWidth = (this.curWidth - marginWidth) / this.columns;\n    let marginHeight = -this.$options?.margin || 0;\n    this.curRowHeight = (this.curHeight - marginHeight) / this.rows;\n    this.setState({\n      curColWidth: this.curColWidth,\n      curRowHeight: this.curRowHeight\n    });\n  }\n\n  updateGrid(): void {\n    if (this.$options.displayGrid === 'always' && !this.mobile) {\n      this.renderer.addClass(this.el, 'display-grid');\n    } else if (this.$options.displayGrid === 'onDrag&Resize' && this.dragInProgress) {\n      this.renderer.addClass(this.el, 'display-grid');\n    } else if (this.$options.displayGrid === 'none' || !this.dragInProgress || this.mobile) {\n      this.renderer.removeClass(this.el, 'display-grid');\n    }\n    this.setGridDimensions();\n    this.gridColumns.length = Math.max(this.columns, Math.floor(this.curWidth / this.curColWidth)) || 0;\n    this.gridRows.length = Math.max(this.rows, Math.floor(this.curHeight / this.curRowHeight)) || 0;\n  }\n\n  checkIfToResize(): boolean {\n    const clientWidth = this.el.clientWidth;\n    const offsetWidth = this.el.offsetWidth;\n    const scrollWidth = this.el.scrollWidth;\n    const clientHeight = this.el.clientHeight;\n    const offsetHeight = this.el.offsetHeight;\n    const scrollHeight = this.el.scrollHeight;\n    const verticalScrollPresent = clientWidth < offsetWidth && scrollHeight > offsetHeight\n      && scrollHeight - offsetHeight < offsetWidth - clientWidth;\n    const horizontalScrollPresent = clientHeight < offsetHeight\n      && scrollWidth > offsetWidth && scrollWidth - offsetWidth < offsetHeight - clientHeight;\n    if (verticalScrollPresent) {\n      return false;\n    }\n    return !horizontalScrollPresent;\n  }\n\n  onResize(): void {\n    this.setGridSize();\n    this.calculateLayout();\n  }\n\n  resize(): void {\n    let height;\n    let width;\n    if (this.$options.gridType === 'fit' && !this.mobile) {\n      width = this.el.offsetWidth;\n      height = this.el.offsetHeight;\n    } else {\n      width = this.el.clientWidth;\n      height = this.el.clientHeight;\n    }\n    if ((width !== this.curWidth || height !== this.curHeight) && this.checkIfToResize()) {\n      this.onResize();\n    }\n  }\n\n  render() {\n\n    const gridsterColumns = [];\n    const gridsterRows = [];\n    if (this.el) {\n      for(let i = 0; i < this.columns; i++) {\n        const style = this.gridRenderer.getGridColumnStyle(i);\n        gridsterColumns.push(\n          <div key={'grid-col-' + i} className={styles.gridsterColumn} style={style}></div>\n        )\n      }\n      for(let i = 0; i < this.rows; i++) {\n        const style = this.gridRenderer.getGridRowStyle(i);\n        gridsterRows.push(\n          <div key={'grid-row-' + i} className={styles.gridsterRow} style={style}></div>\n        )\n      }\n    }\n    return (\n      <div ref={this.elRef} className={styles.gridster + ' ' + styles.displayGrid + ' ' + styles[this.$options?.gridType]} id=\"gridster-board\">\n        { ...gridsterColumns }\n        { ...gridsterRows }\n        { this.props.children }\n      </div>\n    )\n  }\n}\n\n// export const Gridster = ({ options }: Props) => {\n//   return <div className={styles.test}>\n    \n//   </div>\n// }\n"],"names":["GridType","DisplayGrid","CompactType","GridsterRenderer","gridster","destroy","updateItem","el","item","renderer","mobile","clearCellPosition","$options","keepFixedHeightInMobile","setStyle","rows","fixedRowHeight","curWidth","cols","keepFixedWidthInMobile","fixedColWidth","margin","x","y","draggable","dropOverItemStack","left","undefined","Math","round","curColWidth","top","curRowHeight","zIndex","width","height","setCellPosition","marginBottom","marginRight","outerMargin","outerMarginBottom","columns","outerMarginRight","updateGridster","addClass","removeClass1","removeClass2","removeClass3","gridType","Fit","ScrollVertical","ScrollHorizontal","Fixed","ignoreMarginInRow","VerticalFixed","HorizontalFixed","removeClass","getGridColumnStyle","i","getLeftPosition","gridRows","length","getGridRowStyle","getTopPosition","gridColumns","d","useTransformPositioning","transform","getLeftMargin","getTopMargin","movingItem","Object","assign","outerMarginLeft","outerMarginTop","EventManager","addEventListener","element","eventName","handler","removeEventListener","addGlobalEventListener","target","t","getGlobalEventTarget","document","doc","window","body","RendererStyleFlags2","NAMESPACE_URIS","svg","xhtml","xlink","xml","xmlns","Renderer","setAttribute","name","value","namespace","setAttributeNS","removeAttribute","removeAttributeNS","classList","add","remove","style","flags","replace","toLowerCase","styleMap","_readStyleAttribute","Important","_writeStyleAttribute","listen","event","callback","styleAttribute","getAttribute","styleList","split","trim","colonIndex","indexOf","Error","substr","styleAttrValue","key","newValue","GridsterConfigService","setGridSize","compactType","None","mobileBreakpoint","minCols","maxCols","minRows","maxRows","defaultItemCols","defaultItemRows","maxItemCols","maxItemRows","minItemCols","minItemRows","minItemArea","maxItemArea","scrollSensitivity","scrollSpeed","initCallback","destroyCallback","gridSizeChangedCallback","itemChangeCallback","itemResizeCallback","itemInitCallback","itemRemovedCallback","itemValidateCallback","enableEmptyCellClick","enableEmptyCellContextMenu","enableEmptyCellDrop","enableEmptyCellDrag","enableOccupiedCellDrop","emptyCellClickCallback","emptyCellContextMenuCallback","emptyCellDropCallback","emptyCellDragCallback","emptyCellDragMaxCols","emptyCellDragMaxRows","delayStart","enabled","ignoreContentClass","ignoreContent","dragHandleClass","stop","start","dropOverItems","dropOverItemsCallback","dropOverItemSplit","resizable","handles","s","e","n","w","se","ne","sw","nw","swap","swapWhileDragging","pushItems","disablePushOnDrag","disablePushOnResize","pushDirections","north","east","south","west","pushResizeItems","displayGrid","OnDragAndResize","disableWindowResize","disableWarnings","scrollToNewItems","disableScrollHorizontal","disableScrollVertical","disableAutoPositionOnConflict","GridsterUtils","merge","obj1","obj2","properties","p","hasOwnProperty","debounce","func","wait","timeout","context","arg","args","later","apply","clearTimeout","setTimeout","checkTouchEvent","clientX","touches","clientY","changedTouches","checkContentClassForEvent","checkContentClass","currentTarget","checkContentClassForEmptyCellClickEvent","current","contentClass","hasAttribute","parentNode","compareItems","a","b","GridsterItemSplitMode","GridsterEmptyCell","initialItem","previewStyle","emptyCellExit","updateOptions","emptyCellClick","options","emptyCellClickCb","bind","emptyCellClickTouch","emptyCellContextMenu","emptyCellContextMenuCb","emptyCellDrop","emptyCellDragDrop","emptyCellMove","emptyCellDrag","emptyCellMouseDown","emptyCellDragTouch","getValidItemFromEvent","preventDefault","stopPropagation","spliting","splitingItemComponent","overItem","up","down","right","emptyCellDragOver","draggingDom","srcElement","ownerDocument","querySelector","dataTransfer","dropEffect","leftMouseButtonCode","buttons","emptyCellUp","emptyCellMouseUp","emptyCellUpTouch","emptyCellMouseMove","emptyCellMMove","emptyCellMMoveTouch","oldItem","rect","getBoundingClientRect","scrollLeft","scrollTop","pixelsToPositionX","floor","pixelsToPositionY","checkItem","max","findItemWithItem","splitUD","$item","ceil","splitLR","halfPositionX","halfPositionY","angle","atan2","tmpAngle","splitItem","leftReferenceItem","checkdReferenceItem","rightReferenceItem","topReferenceItem","bottomReferenceItem","min","abs","checkCollision","mode","pos","findItem","fitByReferenceItem","GridsterCompact","checkCompact","CompactUp","checkCompactUp","CompactLeft","checkCompactLeft","CompactUpAndLeft","CompactLeftAndUp","CompactRight","checkCompactRight","CompactUpAndRight","CompactRightAndUp","checkCompactItem","moveUpTillCollision","moveLeftTillCollision","moveRightTillCollision","widgetMovedUp","widget","moved","l","grid","compactEnabled","itemChanged","Gridster","props","curHeight","elRef","React","JSON","parse","stringify","calculateLayoutDebounce","calculateLayout","dragInProgress","emptyCell","compact","gridRenderer","console","log","setOptions","componentDidUpdate","componentDidMount","updateGrid","forceUpdate","checkCollisionTwoItems","item2","widgetsIndex","findItemsWithItem","push","checkGridCollision","checkCollisionForSwaping","roundingMethod","noLimit","position","positionXToPixels","positionYToPixels","addItem","itemComponent","removeItem","setGridDimensions","clientWidth","clientHeight","offsetWidth","offsetHeight","setState","windowResize","onResize","optionsChanged","marginWidth","marginHeight","checkIfToResize","scrollWidth","scrollHeight","verticalScrollPresent","horizontalScrollPresent","resize","render","gridsterColumns","gridsterRows","className","styles","gridsterColumn","gridsterRow","ref","id","children"],"mappings":"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"}