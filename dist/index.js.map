{"version":3,"file":"index.js","sources":["../src/index.tsx"],"sourcesContent":["import * as React from 'react'\nimport styles from './styles.module.css'\nimport { GridsterConfig } from './gridsterConfig.interface';\nimport { GridsterConfigS } from './gridsterConfigS.interface';\n\n\ninterface Props {\n  options: GridsterConfig;\n}\n\nexport class Gridster extends React.Component<Props> {\n  $options: GridsterConfigS;\n\n  columns = 12;\n  rows = 12;\n  curWidth: number;\n  curHeight: number;\n  curColWidth: number;\n  curRowHeight: number;\n\n  mobile = false;\n\n  constructor(props: Props) {\n    super(props);\n    this.curWidth = 0;\n    this.curHeight = 0;\n    this.curColWidth = 0;\n    this.curRowHeight = 0;\n  }\n\n  componentDidMount() {\n    this.setGridSize();\n    this.calculateLayout();\n    this.updateGrid();\n  }\n\n  /**\n   * 设置画布整体大小\n   */\n  setGridSize(): void {\n    const el: HTMLDivElement = document.getElementById('gridster-board') as HTMLDivElement;\n    let width = el.clientWidth;\n    let height = el.clientHeight;\n    if (this.$options?.setGridSize || this.$options?.gridType === 'fit' && !this.mobile) {\n      width = el.offsetWidth;\n      height = el.offsetHeight;\n    } else {\n      width = el.clientWidth;\n      height = el.clientHeight;\n    }\n    this.curWidth = width;\n    this.curHeight = height;\n  }\n\n  setOptions(): void {\n\n  }\n\n  optionsChanged(): void {\n    this.setOptions();\n\n  }\n\n  calculateLayout() {\n    let marginWidth = -this.$options?.margin || 0;\n    this.curColWidth = (this.curWidth - marginWidth) / this.columns;\n    let marginHeight = -this.$options?.margin || 0;\n    this.curRowHeight = (this.curHeight - marginHeight) / this.rows;\n  }\n\n  updateGrid(): void {\n\n  }\n\n  render() {\n    const gridsterColumns = [];\n    for(let i = 0; i < this.columns; i++) {\n      gridsterColumns.push(\n        <div key={'grid-col-' + i} className={styles.gridsterColumn}></div>\n      )\n    }\n    const gridsterRows = [];\n    for(let i = 0; i < this.rows; i++) {\n      gridsterRows.push(\n        <div key={'grid-row-' + i} className={styles.gridsterRow}></div>\n      )\n    }\n    console.log(gridsterColumns);\n    console.log(gridsterRows);\n    return (\n      <div className={styles.gridster + ' ' + styles.displayGrid} id=\"gridster-board\">\n        { gridsterColumns }\n        { gridsterRows }\n      </div>\n    )\n  }\n}\n\n// export const Gridster = ({ options }: Props) => {\n//   return <div className={styles.test}>\n    \n//   </div>\n// }\n"],"names":["Gridster","props","curWidth","curHeight","curColWidth","curRowHeight","componentDidMount","setGridSize","calculateLayout","updateGrid","el","document","getElementById","width","clientWidth","height","clientHeight","$options","gridType","mobile","offsetWidth","offsetHeight","setOptions","optionsChanged","marginWidth","margin","columns","marginHeight","rows","render","gridsterColumns","i","push","React","key","className","styles","gridsterColumn","gridsterRows","gridsterRow","console","log","gridster","displayGrid","id"],"mappings":"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"}