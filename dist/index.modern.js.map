{"version":3,"file":"index.modern.js","sources":["../src/gridsterConfig.interface.ts","../src/gridsterRenderer.ts","../src/utils/renderer.ts","../src/Gridster.tsx"],"sourcesContent":["import {GridsterItem} from './gridsterItem.interface';\r\nimport {GridsterItemComponentInterface} from './gridsterItemComponent.interface';\r\nimport {GridsterComponentInterface} from './gridster.interface';\r\n\r\nexport type gridTypes = 'fit' | 'scrollVertical' | 'scrollHorizontal' | 'fixed' | 'verticalFixed' | 'horizontalFixed';\r\nexport type displayGrids = 'always' | 'onDrag&Resize' | 'none';\r\nexport type compactTypes =\r\n  'none'\r\n  | 'compactUp'\r\n  | 'compactLeft'\r\n  | 'compactUp&Left'\r\n  | 'compactLeft&Up'\r\n  | 'compactRight'\r\n  | 'compactUp&Right'\r\n  | 'compactRight&Up';\r\n\r\nexport enum GridType {\r\n  Fit = 'fit',\r\n  ScrollVertical = 'scrollVertical',\r\n  ScrollHorizontal = 'scrollHorizontal',\r\n  Fixed = 'fixed',\r\n  VerticalFixed = 'verticalFixed',\r\n  HorizontalFixed = 'horizontalFixed'\r\n}\r\n\r\nexport enum DisplayGrid {\r\n  Always = 'always',\r\n  OnDragAndResize = 'onDrag&Resize',\r\n  None = 'none'\r\n}\r\n\r\nexport enum CompactType {\r\n  None = 'none',\r\n  CompactUp = 'compactUp',\r\n  CompactLeft = 'compactLeft',\r\n  CompactUpAndLeft = 'compactUp&Left',\r\n  CompactLeftAndUp = 'compactLeft&Up',\r\n  CompactRight = 'compactRight',\r\n  CompactUpAndRight = 'compactUp&Right',\r\n  CompactRightAndUp = 'compactRight&Up',\r\n}\r\n\r\nexport interface GridsterConfig {\r\n  gridType?: gridTypes;\r\n  fixedColWidth?: number;\r\n  fixedRowHeight?: number;\r\n  keepFixedHeightInMobile?: boolean;\r\n  keepFixedWidthInMobile?: boolean;\r\n  setGridSize?: boolean;\r\n  compactType?: compactTypes;\r\n  mobileBreakpoint?: number;\r\n  minCols?: number;\r\n  maxCols?: number;\r\n  minRows?: number;\r\n  maxRows?: number;\r\n  defaultItemCols?: number;\r\n  defaultItemRows?: number;\r\n  maxItemCols?: number;\r\n  maxItemRows?: number;\r\n  minItemCols?: number;\r\n  minItemRows?: number;\r\n  minItemArea?: number;\r\n  maxItemArea?: number;\r\n  margin?: number;\r\n  outerMargin?: boolean;\r\n  outerMarginTop?: number | null;\r\n  outerMarginRight?: number | null;\r\n  outerMarginBottom?: number | null;\r\n  outerMarginLeft?: number | null;\r\n  useTransformPositioning?: boolean;\r\n  scrollSensitivity?: number | null;\r\n  scrollSpeed?: number;\r\n  initCallback?: (gridster: GridsterComponentInterface) => void;\r\n  destroyCallback?: (gridster: GridsterComponentInterface) => void;\r\n  gridSizeChangedCallback?: (gridster: GridsterComponentInterface) => void;\r\n  itemChangeCallback?: (item: GridsterItem, itemComponent: GridsterItemComponentInterface) => void;\r\n  itemResizeCallback?: (item: GridsterItem, itemComponent: GridsterItemComponentInterface) => void;\r\n  itemInitCallback?: (item: GridsterItem, itemComponent: GridsterItemComponentInterface) => void;\r\n  itemRemovedCallback?: (item: GridsterItem, itemComponent: GridsterItemComponentInterface) => void;\r\n  itemValidateCallback?: (item: GridsterItem) => boolean;\r\n  draggable?: Draggable;\r\n  resizable?: Resizable;\r\n  swap?: boolean;\r\n  swapWhileDragging?: boolean;\r\n  pushItems?: boolean;\r\n  disablePushOnDrag?: boolean;\r\n  disablePushOnResize?: boolean;\r\n  disableAutoPositionOnConflict?: boolean;\r\n  pushDirections?: PushDirections;\r\n  pushResizeItems?: boolean;\r\n  displayGrid?: displayGrids;\r\n  disableWindowResize?: boolean;\r\n  disableWarnings?: boolean;\r\n  scrollToNewItems?: boolean;\r\n  disableScrollHorizontal?: boolean;\r\n  disableScrollVertical?: boolean;\r\n  enableEmptyCellClick?: boolean;\r\n  enableEmptyCellContextMenu?: boolean;\r\n  enableEmptyCellDrop?: boolean;\r\n  enableEmptyCellDrag?: boolean;\r\n  enableOccupiedCellDrop?: boolean;\r\n  emptyCellClickCallback?: (event: MouseEvent, item: GridsterItem) => void;\r\n  emptyCellContextMenuCallback?: (event: MouseEvent, item: GridsterItem) => void;\r\n  emptyCellDropCallback?: (event: MouseEvent, item: GridsterItem) => void;\r\n  emptyCellDragCallback?: (event: MouseEvent, item: GridsterItem) => void;\r\n  emptyCellDragMaxCols?: number;\r\n  emptyCellDragMaxRows?: number;\r\n  ignoreMarginInRow?: boolean;\r\n  api?: {\r\n    resize?: () => void,\r\n    optionsChanged?: () => void,\r\n    getNextPossiblePosition?: (newItem: GridsterItem) => boolean,\r\n    getFirstPossiblePosition?: (item: GridsterItem) => GridsterItem,\r\n    getLastPossiblePosition?: (item: GridsterItem) => GridsterItem,\r\n  };\r\n\r\n  [propName: string]: any;\r\n}\r\n\r\nexport interface DragBase {\r\n  enabled?: boolean;\r\n  stop?: (item: GridsterItem, itemComponent: GridsterItemComponentInterface, event: MouseEvent) => Promise<any> | void;\r\n  start?: (item: GridsterItem, itemComponent: GridsterItemComponentInterface, event: MouseEvent) => void;\r\n  delayStart?: number;\r\n}\r\n\r\nexport interface Draggable extends DragBase {\r\n  ignoreContentClass?: string;\r\n  ignoreContent?: boolean;\r\n  dragHandleClass?: string;\r\n  dropOverItems?: boolean;\r\n  dropOverItemsCallback?: (source: GridsterItem, target: GridsterItem, grid?: GridsterComponentInterface) => void;\r\n  dropOverItemStack?: boolean, \t// ����Item������һ��Item���з�Ŀ��Item�Ĵ�С������ʱҪ��֤dropOverItemStackΪfalse\r\n  dropOverItemSplit?: boolean\t// ����Item�ѵ����������ɲ��֣�����ʱҪ��֤dropOverItemSplitΪfalse\r\n}\r\n\r\nexport interface Resizable extends DragBase {\r\n  handles?: {\r\n    s: boolean,\r\n    e: boolean,\r\n    n: boolean,\r\n    w: boolean,\r\n    se: boolean,\r\n    ne: boolean,\r\n    sw: boolean,\r\n    nw: boolean\r\n  };\r\n}\r\n\r\nexport interface PushDirections {\r\n  north: boolean;\r\n  east: boolean;\r\n  south: boolean;\r\n  west: boolean;\r\n}\r\n","import {GridsterComponentInterface} from './gridster.interface';\r\nimport {GridType} from './gridsterConfig.interface';\r\nimport {GridsterItem} from './gridsterItem.interface';\r\nimport { Renderer } from './utils/renderer';\r\n\r\nexport class GridsterRenderer {\r\n\r\n  constructor(private gridster: GridsterComponentInterface) {\r\n  }\r\n\r\n  destroy(): void {\r\n    delete this.gridster;\r\n  }\r\n\r\n  updateItem(el: any, item: GridsterItem, renderer: Renderer) {\r\n    if (this.gridster.mobile) {\r\n      this.clearCellPosition(renderer, el);\r\n      if (this.gridster.$options?.keepFixedHeightInMobile) {\r\n        renderer.setStyle(el, 'height', (item.rows * this.gridster.$options?.fixedRowHeight) + 'px');\r\n      } else {\r\n        renderer.setStyle(el, 'height',  (item.rows * this.gridster.curWidth / item.cols ) + 'px');\r\n      }\r\n      if (this.gridster.$options?.keepFixedWidthInMobile) {\r\n        renderer.setStyle(el, 'width', this.gridster.$options?.fixedColWidth + 'px');\r\n      } else {\r\n        renderer.setStyle(el, 'width', '');\r\n      }\r\n\r\n      renderer.setStyle(el, 'margin-bottom', this.gridster.$options?.margin + 'px');\r\n      renderer.setStyle(el, 'margin-right', '');\r\n    } else {\r\n      // 这里的x,y 其实是left 和 top\r\n      let x = 0;\r\n      let y = 0;\r\n      if (this.gridster.$options?.draggable.dropOverItemStack) {\r\n        // 堆叠模式下，位置的不能直接通过计算过去，应该优先应用具体的位置信息\r\n        x = item.left !== undefined ? item.left - this.gridster.$options?.margin : Math.round(this.gridster.curColWidth * item.x);\r\n        y = item.top !== undefined ? item.top - this.gridster.$options?.margin : Math.round(this.gridster.curRowHeight * item.y);\r\n        if (item.zIndex) {\r\n          renderer.setStyle(el, 'z-index', item.zIndex);\r\n        }\r\n      } else {\r\n        x = Math.round(this.gridster.curColWidth * item.x);\r\n        y = Math.round(this.gridster.curRowHeight * item.y);\r\n      }\r\n      const width = this.gridster.curColWidth * item.cols - this.gridster.$options?.margin;\r\n      const height = (this.gridster.curRowHeight * item.rows - this.gridster.$options?.margin);\r\n      // set the cell style\r\n      this.setCellPosition(renderer, el, x, y);\r\n      if (!this.gridster.$options?.draggable.dropOverItemStack) {\r\n        renderer.setStyle(el, 'width', width + 'px');\r\n        renderer.setStyle(el, 'height', height + 'px');\r\n      } else {\r\n        // 如果item设置了宽、高，应该优先应用\r\n        renderer.setStyle(el, 'width', (item.width ? item.width : width) + 'px');\r\n        renderer.setStyle(el, 'height', (item.height ? item.height : height) + 'px');\r\n      }\r\n      let marginBottom: string | null = null;\r\n      let marginRight: string | null = null;\r\n      if (this.gridster.$options?.outerMargin) {\r\n        if (this.gridster.rows === item.rows + item.y) {\r\n          if (this.gridster.$options?.outerMarginBottom !== null) {\r\n            marginBottom = this.gridster.$options?.outerMarginBottom + 'px';\r\n          } else {\r\n            marginBottom = this.gridster.$options?.margin + 'px';\r\n          }\r\n        }\r\n        if (this.gridster.columns === item.cols + item.x) {\r\n          if (this.gridster.$options?.outerMarginBottom !== null) {\r\n            marginRight = this.gridster.$options?.outerMarginRight + 'px';\r\n          } else {\r\n            marginRight = this.gridster.$options?.margin + 'px';\r\n          }\r\n        }\r\n      }\r\n\r\n      renderer.setStyle(el, 'margin-bottom', marginBottom);\r\n      renderer.setStyle(el, 'margin-right', marginRight);\r\n    }\r\n  }\r\n\r\n  updateGridster() {\r\n    let addClass = '';\r\n    let removeClass1 = '';\r\n    let removeClass2 = '';\r\n    let removeClass3 = '';\r\n    if (this.gridster.$options?.gridType === GridType.Fit) {\r\n      addClass = GridType.Fit;\r\n      removeClass1 = GridType.ScrollVertical;\r\n      removeClass2 = GridType.ScrollHorizontal;\r\n      removeClass3 = GridType.Fixed;\r\n    } else if (this.gridster.$options?.gridType === GridType.ScrollVertical) {\r\n      this.gridster.curRowHeight = this.gridster.curColWidth;\r\n      addClass = GridType.ScrollVertical;\r\n      removeClass1 = GridType.Fit;\r\n      removeClass2 = GridType.ScrollHorizontal;\r\n      removeClass3 = GridType.Fixed;\r\n    } else if (this.gridster.$options?.gridType === GridType.ScrollHorizontal) {\r\n      this.gridster.curColWidth = this.gridster.curRowHeight;\r\n      addClass = GridType.ScrollHorizontal;\r\n      removeClass1 = GridType.Fit;\r\n      removeClass2 = GridType.ScrollVertical;\r\n      removeClass3 = GridType.Fixed;\r\n    } else if (this.gridster.$options?.gridType === GridType.Fixed) {\r\n      this.gridster.curColWidth = this.gridster.$options?.fixedColWidth +\r\n        (this.gridster.$options?.ignoreMarginInRow ? 0 : this.gridster.$options?.margin);\r\n      this.gridster.curRowHeight = this.gridster.$options?.fixedRowHeight +\r\n        (this.gridster.$options?.ignoreMarginInRow ? 0 : this.gridster.$options?.margin);\r\n      addClass = GridType.Fixed;\r\n      removeClass1 = GridType.Fit;\r\n      removeClass2 = GridType.ScrollVertical;\r\n      removeClass3 = GridType.ScrollHorizontal;\r\n    } else if (this.gridster.$options?.gridType === GridType.VerticalFixed) {\r\n      this.gridster.curRowHeight = this.gridster.$options?.fixedRowHeight +\r\n        (this.gridster.$options?.ignoreMarginInRow ? 0 : this.gridster.$options?.margin);\r\n      addClass = GridType.ScrollVertical;\r\n      removeClass1 = GridType.Fit;\r\n      removeClass2 = GridType.ScrollHorizontal;\r\n      removeClass3 = GridType.Fixed;\r\n    } else if (this.gridster.$options?.gridType === GridType.HorizontalFixed) {\r\n      this.gridster.curColWidth = this.gridster.$options?.fixedColWidth +\r\n        (this.gridster.$options?.ignoreMarginInRow ? 0 : this.gridster.$options?.margin);\r\n      addClass = GridType.ScrollHorizontal;\r\n      removeClass1 = GridType.Fit;\r\n      removeClass2 = GridType.ScrollVertical;\r\n      removeClass3 = GridType.Fixed;\r\n    }\r\n\r\n    if (this.gridster.mobile) {\r\n      this.gridster.renderer.removeClass(this.gridster.el, addClass);\r\n    } else {\r\n      this.gridster.renderer.addClass(this.gridster.el, addClass);\r\n    }\r\n    this.gridster.renderer.removeClass(this.gridster.el, removeClass1);\r\n    this.gridster.renderer.removeClass(this.gridster.el, removeClass2);\r\n    this.gridster.renderer.removeClass(this.gridster.el, removeClass3);\r\n  }\r\n\r\n  getGridColumnStyle(i: number) {\r\n    return {\r\n      ...this.getLeftPosition(this.gridster.curColWidth * i),\r\n      width: this.gridster.curColWidth - this.gridster.$options?.margin + 'px',\r\n      height: this.gridster.gridRows.length * this.gridster.curRowHeight - this.gridster.$options?.margin + 'px'\r\n    };\r\n  }\r\n\r\n  getGridRowStyle(i: number) {\r\n    return {\r\n      ...this.getTopPosition(this.gridster.curRowHeight * i),\r\n      width: this.gridster.gridColumns.length * this.gridster.curColWidth - this.gridster.$options?.margin + 'px',\r\n      height: this.gridster.curRowHeight - this.gridster.$options?.margin + 'px'\r\n    };\r\n  }\r\n\r\n  getLeftPosition(d: number): Object {\r\n    if (this.gridster.$options?.useTransformPositioning) {\r\n      return {\r\n        transform: 'translateX(' + d + 'px)',\r\n      };\r\n    } else {\r\n      return {\r\n        left: (this.getLeftMargin() + d) + 'px'\r\n      };\r\n    }\r\n  }\r\n\r\n  getTopPosition(d: number): Object {\r\n    if (this.gridster.$options?.useTransformPositioning) {\r\n      return {\r\n        transform: 'translateY(' + d + 'px)',\r\n      };\r\n    } else {\r\n      return {\r\n        top: this.getTopMargin() + d + 'px'\r\n      };\r\n    }\r\n  }\r\n\r\n  clearCellPosition(renderer: Renderer, el: any): void {\r\n    if (this.gridster.$options?.useTransformPositioning) {\r\n      renderer.setStyle(el, 'transform', '');\r\n    } else {\r\n      renderer.setStyle(el, 'top', '');\r\n      renderer.setStyle(el, 'left', '');\r\n    }\r\n  }\r\n\r\n  setCellPosition(renderer: Renderer, el: any, x: number, y: number): void {\r\n    if (this.gridster.$options?.useTransformPositioning) {\r\n      const transform = 'translate3d(' + x + 'px, ' + y + 'px, 0)';\r\n      renderer.setStyle(el, 'transform', transform);\r\n    } else {\r\n      if (!this.gridster.$options?.draggable.dropOverItemStack) {\r\n        renderer.setStyle(el, 'left', this.getLeftMargin() + x + 'px');\r\n        renderer.setStyle(el, 'top', this.getTopMargin() + y + 'px');\r\n      } else {\r\n        let left = 0;\r\n        let top = 0;\r\n        // 这里对左、上边缘位置限制处理，避免元素渲染到边缘以外去\r\n        if (x < 0 || y < 0) {\r\n          if (x < 0 && y >= 0) {\r\n            left = this.getLeftMargin();\r\n            top = this.getTopMargin() + y;\r\n          }\r\n          if (x >= 0 && y < 0) {\r\n            left = this.getLeftMargin() + x;\r\n            top = this.getTopMargin();\r\n          }\r\n          if (x < 0 && y < 0) {\r\n            left = this.getLeftMargin();\r\n            top = this.getTopMargin();\r\n          }\r\n        } else {\r\n          left = this.getLeftMargin() + x;\r\n          top = this.getTopMargin() + y;\r\n        }\r\n        renderer.setStyle(el, 'left', left + 'px');\r\n        renderer.setStyle(el, 'top', top + 'px');\r\n        if (this.gridster.movingItem) {\r\n          Object.assign(this.gridster.movingItem, { left, top });\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  getLeftMargin(): number {\r\n    if (this.gridster.$options?.outerMargin) {\r\n      if (this.gridster.$options?.outerMarginLeft !== null) {\r\n        return this.gridster.$options?.outerMarginLeft;\r\n      } else {\r\n        return this.gridster.$options?.margin;\r\n      }\r\n    } else {\r\n      return 0;\r\n    }\r\n  }\r\n\r\n  getTopMargin(): number {\r\n    if (this.gridster.$options?.outerMargin) {\r\n      if (this.gridster.$options?.outerMarginTop !== null) {\r\n        return this.gridster.$options?.outerMarginTop;\r\n      } else {\r\n        return this.gridster.$options?.margin;\r\n      }\r\n    } else {\r\n      return 0;\r\n    }\r\n  }\r\n}\r\n","/**\r\n * Flags for renderer-specific style modifiers.\r\n * @publicApi\r\n */\r\nexport enum RendererStyleFlags2 {\r\n  // TODO(misko): This needs to be refactored into a separate file so that it can be imported from\r\n  // `node_manipulation.ts` Currently doing the import cause resolution order to change and fails\r\n  // the tests. The work around is to have hard coded value in `node_manipulation.ts` for now.\r\n  /**\r\n   * Marks a style as important.\r\n   */\r\n  Important = 1 << 0,\r\n  /**\r\n   * Marks a style as using dash case naming (this-is-dash-case).\r\n   */\r\n  DashCase = 1 << 1\r\n}\r\n\r\nexport const NAMESPACE_URIS: { [ns: string]: string } = {\r\n  svg: 'http://www.w3.org/2000/svg',\r\n  xhtml: 'http://www.w3.org/1999/xhtml',\r\n  xlink: 'http://www.w3.org/1999/xlink',\r\n  xml: 'http://www.w3.org/XML/1998/namespace',\r\n  xmlns: 'http://www.w3.org/2000/xmlns/'\r\n}\r\n\r\nexport class Renderer {\r\n  setAttribute(el: any, name: string, value: string, namespace?: string): void {\r\n    if (namespace) {\r\n      // TODO(FW-811): Ivy may cause issues here because it's passing around\r\n      // full URIs for namespaces, therefore this lookup will fail.\r\n      el.setAttributeNS(\r\n        NAMESPACE_URIS[namespace],\r\n        namespace + ':' + name,\r\n        value\r\n      )\r\n    } else {\r\n      el.setAttribute(name, value)\r\n    }\r\n  }\r\n\r\n  removeAttribute(el: any, name: string, namespace?: string): void {\r\n    if (namespace) {\r\n      // TODO(FW-811): Ivy may cause issues here because it's passing around\r\n      // full URIs for namespaces, therefore this lookup will fail.\r\n      el.removeAttributeNS(NAMESPACE_URIS[namespace], name)\r\n    } else {\r\n      el.removeAttribute(name)\r\n    }\r\n  }\r\n\r\n  addClass(el: any, name: string): void {\r\n    el.classList.add(name)\r\n  }\r\n\r\n  removeClass(el: any, name: string): void {\r\n    el.classList.remove(name)\r\n  }\r\n\r\n  setStyle(\r\n    el: any,\r\n    style: string,\r\n    value: any,\r\n    flags?: RendererStyleFlags2\r\n  ): void {\r\n    style = style.replace(/([a-z])([A-Z])/g, '$1-$2').toLowerCase()\r\n    const styleMap = _readStyleAttribute(el)\r\n    if (flags && RendererStyleFlags2.Important) {\r\n      value += ' !important'\r\n    }\r\n    styleMap[style] = value == null ? '' : value\r\n    _writeStyleAttribute(el, styleMap)\r\n  }\r\n}\r\n\r\nfunction _readStyleAttribute(element: any): { [name: string]: string } {\r\n  const styleMap: { [name: string]: string } = {}\r\n  const styleAttribute = element.getAttribute('style')\r\n  if (styleAttribute) {\r\n    const styleList = styleAttribute.split(/;+/g)\r\n    for (let i = 0; i < styleList.length; i++) {\r\n      const style = styleList[i].trim()\r\n      if (style.length > 0) {\r\n        const colonIndex = style.indexOf(':')\r\n        if (colonIndex === -1) {\r\n          throw new Error(`Invalid CSS style: ${style}`)\r\n        }\r\n        const name = style.substr(0, colonIndex).trim()\r\n        styleMap[name] = style.substr(colonIndex + 1).trim()\r\n      }\r\n    }\r\n  }\r\n  return styleMap\r\n}\r\n\r\nfunction _writeStyleAttribute(\r\n  element: any,\r\n  styleMap: { [name: string]: string }\r\n) {\r\n  let styleAttrValue = ''\r\n  for (const key in styleMap) {\r\n    const newValue = styleMap[key]\r\n    if (newValue != null) {\r\n      styleAttrValue += key + ':' + styleMap[key] + ';'\r\n    }\r\n  }\r\n  element.setAttribute('style', styleAttrValue)\r\n}\r\n","import * as React from 'react'\nimport styles from './styles.module.css'\nimport { GridsterConfig } from './gridsterConfig.interface';\nimport { GridsterConfigS } from './gridsterConfigS.interface';\nimport { GridsterRenderer } from './gridsterRenderer';\nimport { GridsterItem } from './gridsterItem.interface';\nimport { GridsterItemComponentInterface } from './gridsterItemComponent.interface';\nimport { Renderer } from './utils/renderer';\n\n\ninterface Props {\n  options: GridsterConfig;\n}\n\nexport class Gridster extends React.Component<Props> {\n  calculateLayoutDebounce: () => void;\n  movingItem: GridsterItem | null;\n  previewStyle: () => void;\n  el: any;\n  $options: GridsterConfigS;\n  options: GridsterConfig;\n  mobile: boolean;\n  curWidth: number;\n  curHeight: number;\n  grid: Array<GridsterItemComponentInterface>;\n  columns = 12;\n  rows = 12;\n  curColWidth: number;\n  curRowHeight: number;\n  gridColumns = [];\n  gridRows = [];\n  windowResize: (() => void) | null;\n  dragInProgress: boolean;\n  // emptyCell: GridsterEmptyCell;\n  // compact: GridsterCompact;\n  gridRenderer: GridsterRenderer = new GridsterRenderer(this);\n\n  renderer: Renderer = new Renderer();\n\n  constructor(props: Props) {\n    super(props);\n    this.curWidth = 0;\n    this.curHeight = 0;\n    this.curColWidth = 0;\n    this.curRowHeight = 0;\n  }\n\n  componentDidMount() {\n    this.setGridSize();\n    this.calculateLayout();\n    this.updateGrid();\n  }\n\n  static checkCollisionTwoItems(item: GridsterItem, item2: GridsterItem): boolean {\n    return item.x < item2.x + item2.cols\n      && item.x + item.cols > item2.x\n      && item.y < item2.y + item2.rows\n      && item.y + item.rows > item2.y;\n  }\n\n  findItemWithItem(item: GridsterItem): GridsterItemComponentInterface | boolean {\n    let widgetsIndex: number = this.grid.length - 1, widget: GridsterItemComponentInterface;\n    for (; widgetsIndex > -1; widgetsIndex--) {\n      widget = this.grid[widgetsIndex];\n      if (widget.$item !== item && Gridster.checkCollisionTwoItems(widget.$item, item)) {\n        return widget;\n      }\n    }\n    return false;\n  }\n\n  findItemsWithItem(item: GridsterItem): Array<GridsterItemComponentInterface> {\n    const a: Array<GridsterItemComponentInterface> = [];\n    let widgetsIndex: number = this.grid.length - 1, widget: GridsterItemComponentInterface;\n    for (; widgetsIndex > -1; widgetsIndex--) {\n      widget = this.grid[widgetsIndex];\n      if (widget.$item !== item && Gridster.checkCollisionTwoItems(widget.$item, item)) {\n        a.push(widget);\n      }\n    }\n    return a;\n  }\n\n  checkCollision(item: GridsterItem): GridsterItemComponentInterface | boolean { \n    console.log(item);\n    return false;\n  }\n\n  checkGridCollision(item: GridsterItem): boolean { \n    console.log(item);\n    return false;\n  }\n  // identical to checkCollision() except that this function calls findItemWithItemForSwaping() instead of findItemWithItem()\n  checkCollisionForSwaping(item: GridsterItem): GridsterItemComponentInterface | boolean { \n    console.log(item);\n    return false;\n  }\n\n  pixelsToPositionX(x: number, roundingMethod: Function, noLimit?: boolean): number {\n    const position = roundingMethod(x / this.curColWidth);\n    if (noLimit) {\n      return position;\n    } else {\n      return Math.max(position, 0);\n    }\n  }\n\n  pixelsToPositionY(y: number, roundingMethod: Function, noLimit?: boolean): number {\n    const position = roundingMethod(y / this.curRowHeight);\n    if (noLimit) {\n      return position;\n    } else {\n      return Math.max(position, 0);\n    }\n  }\n\n\n  positionXToPixels(x: number): number {\n    return x * this.curColWidth;\n  }\n\n  positionYToPixels(y: number): number {\n    return y * this.curRowHeight;\n  }\n\n  addItem(itemComponent: GridsterItemComponentInterface): void {\n    console.log(itemComponent);\n  }\n\n  removeItem(itemComponent: GridsterItemComponentInterface): void {\n    console.log(itemComponent);\n  }\n\n  setGridDimensions(): void {\n\n  }\n\n\n  /**\n   * 设置画布整体大小\n   */\n  setGridSize(): void {\n    const el: HTMLDivElement = document.getElementById('gridster-board') as HTMLDivElement;\n    let width = el.clientWidth;\n    let height = el.clientHeight;\n    if (this.$options?.setGridSize || this.$options?.gridType === 'fit' && !this.mobile) {\n      width = el.offsetWidth;\n      height = el.offsetHeight;\n    } else {\n      width = el.clientWidth;\n      height = el.clientHeight;\n    }\n    this.curWidth = width;\n    this.curHeight = height;\n  }\n\n  setOptions(): void {\n\n  }\n\n  optionsChanged(): void {\n    this.setOptions();\n\n  }\n\n  calculateLayout() {\n    let marginWidth = -this.$options?.margin || 0;\n    this.curColWidth = (this.curWidth - marginWidth) / this.columns;\n    let marginHeight = -this.$options?.margin || 0;\n    this.curRowHeight = (this.curHeight - marginHeight) / this.rows;\n  }\n\n  updateGrid(): void {\n\n  }\n\n  render() {\n    const gridsterColumns = [];\n    for(let i = 0; i < this.columns; i++) {\n      const style = this.gridRenderer.getGridColumnStyle(i);\n      gridsterColumns.push(\n        <div key={'grid-col-' + i} className={styles.gridsterColumn} style={style}></div>\n      )\n    }\n    const gridsterRows = [];\n    for(let i = 0; i < this.rows; i++) {\n      const style = this.gridRenderer.getGridRowStyle(i);\n      gridsterRows.push(\n        <div key={'grid-row-' + i} className={styles.gridsterRow} style={style}></div>\n      )\n    }\n    console.log(gridsterColumns);\n    console.log(gridsterRows);\n    return (\n      <div className={styles.gridster + ' ' + styles.displayGrid} id=\"gridster-board\">\n        { gridsterColumns }\n        { gridsterRows }\n      </div>\n    )\n  }\n}\n\n// export const Gridster = ({ options }: Props) => {\n//   return <div className={styles.test}>\n    \n//   </div>\n// }\n"],"names":["GridType","DisplayGrid","CompactType","GridsterRenderer","constructor","gridster","destroy","updateItem","el","item","renderer","mobile","clearCellPosition","$options","keepFixedHeightInMobile","setStyle","rows","fixedRowHeight","curWidth","cols","keepFixedWidthInMobile","fixedColWidth","margin","x","y","draggable","dropOverItemStack","left","undefined","Math","round","curColWidth","top","curRowHeight","zIndex","width","height","setCellPosition","marginBottom","marginRight","outerMargin","outerMarginBottom","columns","outerMarginRight","updateGridster","addClass","removeClass1","removeClass2","removeClass3","gridType","Fit","ScrollVertical","ScrollHorizontal","Fixed","ignoreMarginInRow","VerticalFixed","HorizontalFixed","removeClass","getGridColumnStyle","i","getLeftPosition","gridRows","length","getGridRowStyle","getTopPosition","gridColumns","d","useTransformPositioning","transform","getLeftMargin","getTopMargin","movingItem","Object","assign","outerMarginLeft","outerMarginTop","RendererStyleFlags2","NAMESPACE_URIS","svg","xhtml","xlink","xml","xmlns","Renderer","setAttribute","name","value","namespace","setAttributeNS","removeAttribute","removeAttributeNS","classList","add","remove","style","flags","replace","toLowerCase","styleMap","_readStyleAttribute","Important","_writeStyleAttribute","element","styleAttribute","getAttribute","styleList","split","trim","colonIndex","indexOf","Error","substr","styleAttrValue","key","newValue","Gridster","React","props","curHeight","componentDidMount","setGridSize","calculateLayout","updateGrid","checkCollisionTwoItems","item2","findItemWithItem","widgetsIndex","grid","widget","$item","findItemsWithItem","a","push","checkCollision","console","log","checkGridCollision","checkCollisionForSwaping","pixelsToPositionX","roundingMethod","noLimit","position","max","pixelsToPositionY","positionXToPixels","positionYToPixels","addItem","itemComponent","removeItem","setGridDimensions","document","getElementById","clientWidth","clientHeight","offsetWidth","offsetHeight","setOptions","optionsChanged","marginWidth","marginHeight","render","gridsterColumns","gridRenderer","className","styles","gridsterColumn","gridsterRows","gridsterRow","displayGrid","id"],"mappings":"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"}